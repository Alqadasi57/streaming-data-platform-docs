"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[12230],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},14408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={sidebar_position:4},i="NFT Calls API",o={unversionedId:"examples/nft/nft-calls-apI",id:"examples/nft/nft-calls-apI",title:"NFT Calls API",description:"This API helps retrieve information about smart contract transactions, including details about the contract function that was called, the input and output parameters, and more.",source:"@site/docs/examples/nft/nft-calls-apI.md",sourceDirName:"examples/nft",slug:"/examples/nft/nft-calls-apI",permalink:"/docs/examples/nft/nft-calls-apI",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/examples/nft/nft-calls-apI.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"NFT Transfer API",permalink:"/docs/examples/nft/nft-transfer-api"},next:{title:"NFT Trades API",permalink:"/docs/examples/nft/nft-trades-apI"}},s={},c=[{value:"Latest Calls for an NFT",id:"latest-calls-for-an-nft",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nft-calls-api"},"NFT Calls API"),(0,r.kt)("p",null,"This API helps retrieve information about smart contract transactions, including details about the contract function that was called, the input and output parameters, and more. "),(0,r.kt)("h2",{id:"latest-calls-for-an-nft"},"Latest Calls for an NFT"),(0,r.kt)("p",null,"Here's an example query that retrieve the most recent smart contract calls made on an NFT token contract. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  EVM {\n    Calls(\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n      where: {Call: {To: {is: "0x60e4d786628fea6478f785a6d7e704777c86a7c6"}}}\n    ) {\n      Call {\n        From\n        Gas\n        GasUsed\n        To\n        Value\n      }\n      Transaction {\n        Hash\n      }\n      Arguments {\n        Name\n        Value {\n          ... on EVM_ABI_Integer_Value_Arg {\n            integer\n          }\n          ... on EVM_ABI_String_Value_Arg {\n            string\n          }\n          ... on EVM_ABI_Address_Value_Arg {\n            address\n          }\n          ... on EVM_ABI_BigInt_Value_Arg {\n            bigInteger\n          }\n          ... on EVM_ABI_Bytes_Value_Arg {\n            hex\n          }\n          ... on EVM_ABI_Boolean_Value_Arg {\n            bool\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"orderBy")," : Orders the results in descending order based on the Block_Time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit")," : Specifies the maximum results to return. In this query, the limit is 10."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"where"),' :  It filters the results to include only calls made to the smart contract with the specified address ("0x60e4d786628fea6478f785a6d7e704777c86a7c6").')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned Data")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Transaction")," : The ",(0,r.kt)("inlineCode",{parentName:"li"},"Hash")," field represents the hash of the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Call")," : Retrieves information about the call -",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"From"),": The address from which the call was made."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Gas"),": The gas limit specified for the call."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GasUsed"),": The amount of gas used during the call."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"To")," : The address of the NFT token contract that received the call."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Value")," : The amount of Ether transferred in the call."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Arguments { Name Value {....} }")," : Retrieves Array of arguments passed in the smart contract call, including their names and values, refer to ",(0,r.kt)("a",{parentName:"li",href:"/docs/evm/arguments"},"arguments")," for data structure.")),(0,r.kt)("p",null,"You can find the graphql query ",(0,r.kt)("a",{parentName:"p",href:"https://ide.bitquery.io/Smart-contract-calls-to-an-nft-contract"},"here"),"."))}m.isMDXComponent=!0}}]);