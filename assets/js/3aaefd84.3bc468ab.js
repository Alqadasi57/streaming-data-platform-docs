"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[79845],{3905:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>b});var o=l(67294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function c(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,o)}return l}function n(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?c(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):c(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function r(e,t){if(null==e)return{};var l,o,a=function(e,t){if(null==e)return{};var l,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)l=c[o],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)l=c[o],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var i=o.createContext({}),d=function(e){var t=o.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):n(n({},t),e)),l},s=function(e){var t=d(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var l=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),m=d(l),u=a,b=m["".concat(i,".").concat(u)]||m[u]||k[u]||c;return l?o.createElement(b,n(n({ref:t},s),{},{components:l})):o.createElement(b,n({ref:t},s))}));function b(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=l.length,n=new Array(c);n[0]=u;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r[m]="string"==typeof e?e:a,n[1]=r;for(var d=2;d<c;d++)n[d]=l[d];return o.createElement.apply(null,n)}return o.createElement.apply(null,l)}u.displayName="MDXCreateElement"},19751:(e,t,l)=>{l.r(t),l.d(t,{Badge:()=>k,Bullet:()=>s,Details:()=>b,SpecifiedBy:()=>m,assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var o=l(87462),a=l(67294),c=l(3905);const n={id:"evm-block-cube",title:"EVM_Block_Cube",hide_table_of_contents:!1},r=void 0,i={unversionedId:"graphql-reference/objects/evm-block-cube",id:"graphql-reference/objects/evm-block-cube",title:"EVM_Block_Cube",description:"Block of transactions in EVM Blockchain",source:"@site/docs/graphql-reference/objects/evm-block-cube.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-block-cube",permalink:"/docs/graphql-reference/objects/evm-block-cube",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-block-cube.mdx",tags:[],version:"current",frontMatter:{id:"evm-block-cube",title:"EVM_Block_Cube",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_BalanceUpdate_Fields_Uncle",permalink:"/docs/graphql-reference/objects/evm-balance-update-fields-uncle"},next:{title:"EVM_Block_Fields_Block_L1",permalink:"/docs/graphql-reference/objects/evm-block-fields-block-l1"}},d={},s=()=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,c.kt)(a.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),k=e=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),u=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>Block</b></code><Bullet /><code>EVM_Block_Fields_Block</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_block_cubebblockbcodeevm_block_fields_block-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>ChainId</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebchainidbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.ChainId.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubechainidbmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.ChainId.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubechainidbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>average</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebaveragebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.average.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubeaveragebofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.average.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubeaveragebifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>contingency</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcontingencybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.contingency.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecontingencybselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.contingency.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecontingencybofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.contingency.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecontingencybwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcorrelationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.correlation.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecorrelationbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.correlation.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecorrelationbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.correlation.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecorrelationbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>count</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcountbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.count.<b>selectWhere</b></code><Bullet /><code>Metric_filter_String</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecountbselectwherebcodemetric_filter_string-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.count.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecountbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>covariance</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcovariancebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.covariance.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecovariancebselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.covariance.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecovariancebofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.covariance.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecovariancebwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>cramers</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcramersbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecramersbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecramersbwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecramersbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>cramers_bias_corrected</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebcramers_bias_correctedbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers_bias_corrected.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers_bias_corrected.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.cramers_bias_corrected.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>dispersion</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebdispersionbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.dispersion.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubedispersionbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.dispersion.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubedispersionbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>entropy</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebentropybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.entropy.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubeentropybofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.entropy.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubeentropybifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>kurtosis</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebkurtosisbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.kurtosis.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubekurtosisbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.kurtosis.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubekurtosisbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>median</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebmedianbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.median.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubemedianbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.median.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubemedianbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>quantile</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebquantilebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.quantile.<b>level</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubequantileblevelbcodefloat-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.quantile.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubequantilebifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.quantile.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubequantilebmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.quantile.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubequantilebselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>rank_correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebrank_correlationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.rank_correlation.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cuberank_correlationbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.rank_correlation.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cuberank_correlationbwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.rank_correlation.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cuberank_correlationbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>skew</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebskewbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.skew.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubeskewbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.skew.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubeskewbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>standard_deviation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebstandard_deviationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.standard_deviation.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubestandard_deviationbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.standard_deviation.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubestandard_deviationbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>sum</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebsumbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.sum.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubesumbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.sum.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubesumbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>theils</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebtheilsbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.theils.<b>of</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubetheilsbofbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.theils.<b>with</b></code><Bullet /><code>EVM_Block_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubetheilsbwithbcodeevm_block_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.theils.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubetheilsbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.<b>uniq</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_cubebuniqbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.uniq.<b>of</b></code><Bullet /><code>[EVM_Block_EnumFields]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubeuniqbofbcodeevm_block_enumfields--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.uniq.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_cubeuniqbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Cube.uniq.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:l,children:n,startOpen:r=!1}=e;const[i,d]=(0,a.useState)(r);return(0,c.kt)("details",(0,o.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,c.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},i?t:l),i&&n)},_={Bullet:s,SpecifiedBy:m,Badge:k,toc:u,Details:b},f="wrapper";function h(e){let{components:t,...l}=e;return(0,c.kt)(f,(0,o.Z)({},_,l,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Block of transactions in EVM Blockchain"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_Block_Cube {\n  Block: EVM_Block_Fields_Block\n  ChainId(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  average(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  contingency(\n    if: EVM_Block_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n  ): Float\n  correlation(\n    with: EVM_Block_NumFields\n    selectWhere: Metric_filter_Float\n    if: EVM_Block_Filter\n    of: EVM_Block_NumFields\n  ): Float\n  count(\n    distinct: [EVM_Block_EnumFields]\n    selectWhere: Metric_filter_String\n    if: EVM_Block_Filter\n  ): String\n  covariance(\n    if: EVM_Block_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n  ): Float\n  cramers(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  cramers_bias_corrected(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  dispersion(\n    if: EVM_Block_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n  ): Float\n  entropy(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  kurtosis(\n    of: EVM_Block_NumFields\n    selectWhere: Metric_filter_Float\n    if: EVM_Block_Filter\n  ): Float\n  median(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  quantile(\n    of: EVM_Block_NumFields\n    level: Float = 0.5\n    if: EVM_Block_Filter\n    method: OLAP_Metric_Calculation_Method_Exact\n    selectWhere: Metric_filter_Float\n  ): Float\n  rank_correlation(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  skew(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  standard_deviation(\n    if: EVM_Block_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n  ): Float\n  sum(\n    selectWhere: Metric_filter_String\n    of: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): String\n  theils(\n    selectWhere: Metric_filter_Float\n    of: EVM_Block_NumFields\n    with: EVM_Block_NumFields\n    if: EVM_Block_Filter\n  ): Float\n  uniq(\n    selectWhere: Metric_filter_String\n    of: [EVM_Block_EnumFields]\n    if: EVM_Block_Filter\n    method: OLAP_Metric_Calculation_Method_Exact\n  ): String\n}\n")),(0,c.kt)("h3",{id:"fields"},"Fields"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebblockbcodeevm_block_fields_block-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"Block"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-block-fields-block"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Fields_Block"))," ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Block fields")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebchainidbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"ChainId"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"ChainId value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubechainidbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.ChainId.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubechainidbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.ChainId.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubechainidbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.ChainId.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebaveragebcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"average"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Average of the values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubeaveragebselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.average.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeaveragebofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.average.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Average of the values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeaveragebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.average.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcontingencybcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"contingency"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Contingency coefficient between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecontingencybifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.contingency.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecontingencybselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.contingency.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecontingencybofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.contingency.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Contingency coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecontingencybwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.contingency.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Contingency coefficient between two arguments")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcorrelationbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"correlation"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Pearson correlation coefficient between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecorrelationbwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.correlation.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Pearson correlation coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecorrelationbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.correlation.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecorrelationbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.correlation.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecorrelationbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.correlation.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Pearson correlation coefficient between two arguments")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcountbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"count"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Count records or uniques of arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecountbdistinctbcodeevm_block_enumfields--"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.count.",(0,c.kt)("b",null,"distinct"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-enum-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"[EVM_Block_EnumFields]"))," ",(0,c.kt)(k,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Count distinct values of the field")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecountbselectwherebcodemetric_filter_string-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.count.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecountbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.count.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcovariancebcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"covariance"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Covariance between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecovariancebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.covariance.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecovariancebselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.covariance.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecovariancebofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.covariance.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Covariance between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecovariancebwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.covariance.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Covariance between two arguments")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcramersbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"cramers"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecramersbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramersbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramersbwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramersbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebcramers_bias_correctedbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"cramers_bias_corrected"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient with bias correction between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers_bias_corrected.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers_bias_corrected.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers_bias_corrected.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubecramers_bias_correctedbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.cramers_bias_corrected.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebdispersionbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"dispersion"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Dispersion for a set of values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubedispersionbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.dispersion.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubedispersionbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.dispersion.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubedispersionbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.dispersion.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Dispersion for a set of values")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebentropybcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"entropy"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Entropy for a set of values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubeentropybselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.entropy.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeentropybofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.entropy.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Entropy for a set of values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeentropybifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.entropy.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebkurtosisbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"kurtosis"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Kurtosis for a set of values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubekurtosisbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.kurtosis.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Argument for Kurtosis for a set of values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubekurtosisbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.kurtosis.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubekurtosisbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.kurtosis.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebmedianbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"median"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Median for a set of values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubemedianbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.median.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubemedianbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.median.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Median for a set of values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubemedianbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.median.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebquantilebcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"quantile"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Approximate quantile of a numeric data sequence"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubequantilebofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.quantile.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Argument for quantile")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubequantileblevelbcodefloat-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.quantile.",(0,c.kt)("b",null,"level"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of ","[0.01, 0.99]",". Default value: 0.5. At level=0.5 the function calculates median.")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubequantilebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.quantile.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubequantilebmethodbcodeolap_metric_calculation_method_exact-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.quantile.",(0,c.kt)("b",null,"method"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,c.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubequantilebselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.quantile.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebrank_correlationbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"rank_correlation"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rank correlation coefficient between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cuberank_correlationbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.rank_correlation.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cuberank_correlationbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.rank_correlation.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Rank correlation coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cuberank_correlationbwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.rank_correlation.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Rank correlation coefficient between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cuberank_correlationbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.rank_correlation.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebskewbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"skew"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Skew for a set of values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubeskewbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.skew.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeskewbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.skew.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Skew for a set of values")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeskewbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.skew.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebstandard_deviationbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"standard_deviation"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Standard deviation of the values"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubestandard_deviationbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.standard_deviation.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubestandard_deviationbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.standard_deviation.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubestandard_deviationbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.standard_deviation.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for Standard deviation of the values")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebsumbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"sum"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Sum values of argument"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubesumbselectwherebcodemetric_filter_string-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.sum.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubesumbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.sum.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Argument for sum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubesumbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.sum.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebtheilsbcodefloat-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"theils"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,c.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Theil's U uncertainty coefficient, coefficient with bias correction between two arguments"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubetheilsbselectwherebcodemetric_filter_float-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.theils.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubetheilsbofbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.theils.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubetheilsbwithbcodeevm_block_numfields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.theils.",(0,c.kt)("b",null,"with"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-num-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_NumFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubetheilsbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.theils.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_cubebuniqbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.",(0,c.kt)("b",null,"uniq"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Count unique records"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_cubeuniqbselectwherebcodemetric_filter_string-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.uniq.",(0,c.kt)("b",null,"selectWhere"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,c.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeuniqbofbcodeevm_block_enumfields--"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.uniq.",(0,c.kt)("b",null,"of"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-enum-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"[EVM_Block_EnumFields]"))," ",(0,c.kt)(k,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Uniq values of the field")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeuniqbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.uniq.",(0,c.kt)("b",null,"if"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Cube.uniq.",(0,c.kt)("b",null,"method"))),(0,c.kt)(s,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,c.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,c.kt)("h3",{id:"member-of"},"Member of"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);