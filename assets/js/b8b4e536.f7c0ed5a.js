"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9374],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var f=r.createContext({}),l=function(e){var t=r.useContext(f),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(f.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,f=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=l(n),d=a,m=c["".concat(f,".").concat(d)]||c[d]||u[d]||s;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var f in t)hasOwnProperty.call(t,f)&&(i[f]=t[f]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86045:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const s={sidebar_position:2},o="NFT Token Transfers API",i={unversionedId:"examples/transfers/nft-token-transfer-api",id:"examples/transfers/nft-token-transfer-api",title:"NFT Token Transfers API",description:"Let's see how to get the latest NFT token transfers. We are taking Cryptokitties(CK) token example in the following query. The token address for Cryptokitties(CK) token is 0x06012c8cf97bead5deae237070f9587f8e7a266d",source:"@site/docs/examples/transfers/nft-token-transfer-api.md",sourceDirName:"examples/transfers",slug:"/examples/transfers/nft-token-transfer-api",permalink:"/docs/examples/transfers/nft-token-transfer-api",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/examples/transfers/nft-token-transfer-api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"ERC20 Token Transfers API",permalink:"/docs/examples/transfers/erc20-token-transfer-api"},next:{title:"Uniswap Trades on Ethereum",permalink:"/docs/examples/realtimetrades"}},f={},l=[{value:"Subscribe to the latest NFT token transfers",id:"subscribe-to-the-latest-nft-token-transfers",level:2}],p={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nft-token-transfers-api"},"NFT Token Transfers API"),(0,a.kt)("p",null,"Let's see how to get the latest NFT token transfers. We are taking Cryptokitties(CK) token example in the following query. The token address for Cryptokitties(CK) token is ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.bitquery.io/ethereum/token/0x06012c8cf97bead5deae237070f9587f8e7a266d"},"0x06012c8cf97bead5deae237070f9587f8e7a266d")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  EVM(dataset: combined, network: eth) {\n    Transfers(\n      where: {Transfer: {Currency: {SmartContract: {is: "0x06012c8cf97BEaD5deAe237070F9587f8E7A266d"}}}}\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n    ) {\n      Transfer {\n        Amount\n        Currency {\n          Name\n          Symbol\n        }\n        Receiver\n        Sender\n        Type\n        Id\n        URI\n        Data\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Here is the ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/Cryptokitties-Token-Transfers"},"link")," to the query on IDE."),(0,a.kt)("h2",{id:"subscribe-to-the-latest-nft-token-transfers"},"Subscribe to the latest NFT token transfers"),(0,a.kt)("p",null,"Let's see an example of NFT token transfers using GraphQL Subscription (Webhook). In the following API, we will be subscribing to Axie Infinity (AXS) token transfers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'subscription {\n  EVM(network: eth, trigger_on: head) {\n    Transfers(\n      where: {Transfer: {Currency: {SmartContract: {is: "0xf5b0a3efb8e8e4c201e2a935f110eaaf3ffecb8d"}}}}\n      orderBy: {descending: Block_Time}\n    ) {\n      Transaction {\n        Hash\n      }\n      Transfer {\n        Amount\n        Currency {\n          Name\n          Symbol\n        }\n        Receiver\n        Sender\n        Type\n        Id\n        URI\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"You can open this API on our GraphQL IDE using this ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/Subscribe-to-latest-Axie-infinity-token-transfers_1"},"link"),"."))}u.isMDXComponent=!0}}]);