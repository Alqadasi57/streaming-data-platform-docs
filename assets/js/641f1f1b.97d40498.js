"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1499],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,y=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},20859:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const a={sidebar_position:4},o="Limits",l={unversionedId:"graphql/limits",id:"graphql/limits",title:"Limits",description:"Results are limited by using attributes `limit` and `limitBy`",source:"@site/docs/graphql/limits.md",sourceDirName:"graphql",slug:"/graphql/limits",permalink:"/docs/graphql/limits",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql/limits.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Sorting",permalink:"/docs/graphql/sorting"},next:{title:"Metrics",permalink:"/docs/category/metrics"}},s={},p=[{value:"limit",id:"limit",level:2},{value:"limitBy",id:"limitby",level:2}],u={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"limits"},"Limits"),(0,i.kt)("p",null,"Results are limited by using attributes ",(0,i.kt)("inlineCode",{parentName:"p"},"limit")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"limitBy")),(0,i.kt)("h2",{id:"limit"},"limit"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"limit")," just does what is says: limits the results to pre-defined size."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"if you do not specify ",(0,i.kt)("inlineCode",{parentName:"p"},"limit"),", some pre-defined system limit anyway will be applied, around\n10,000 rows of data. This is another argument to use aggregation.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"limit")," attribute has a structure:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"count")," is the maximum count of results returned"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"offset")," is the offset (0-based) of the results (default is 0)")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"do not use ",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," for pagination of the result, unless you sure that the results are not\nmodified or added between the queries and also have strong ordering")),(0,i.kt)("h2",{id:"limitby"},"limitBy"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"limitBy")," limits the result size for every value of the supplied attribute"),(0,i.kt)("p",null,"The following query returns just top 2 blocks by transaction count, ",(0,i.kt)("strong",{parentName:"p"},"per every day")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  EVM (dataset: archive){\n    Transactions(\n      where: {Block: {Date: {after: "2022-11-11"}}}\n      orderBy: {\n        descendingByField: "txCount"\n      }\n      limitBy: {count: 2 by: Block_Date}\n    ) {\n      Block {\n        Date\n        Number\n      }\n      txCount: count\n    }\n  }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"limitBy: {count: 2 by: Block_Date}")," here says: ",(0,i.kt)("em",{parentName:"p"},'"take just 2 records for every ',(0,i.kt)("inlineCode",{parentName:"em"},"Block_Date"),' the result has"'),"."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"limitBy")," is a good tool to do data sampling")))}c.isMDXComponent=!0}}]);