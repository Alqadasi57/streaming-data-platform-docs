"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6209],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var r=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=r.createContext({}),i=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},s=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,s=n(e,["components","mdxType","originalType","parentName"]),m=i(a),_=l,f=m["".concat(c,".").concat(_)]||m[_]||u[_]||o;return a?r.createElement(f,d(d({ref:t},s),{},{components:a})):r.createElement(f,d({ref:t},s))}));function f(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=a.length,d=new Array(o);d[0]=_;var n={};for(var c in t)hasOwnProperty.call(t,c)&&(n[c]=t[c]);n.originalType=e,n[m]="string"==typeof e?e:l,d[1]=n;for(var i=2;i<o;i++)d[i]=a[i];return r.createElement.apply(null,d)}return r.createElement.apply(null,a)}_.displayName="MDXCreateElement"},84211:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>s,Details:()=>f,SpecifiedBy:()=>m,assets:()=>i,contentTitle:()=>n,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>_});var r=a(87462),l=a(67294),o=a(3905);const d={id:"evm-dextrade-cube",title:"EVM_DEXTrade_Cube",hide_table_of_contents:!1},n=void 0,c={unversionedId:"graphql-reference/objects/evm-dextrade-cube",id:"graphql-reference/objects/evm-dextrade-cube",title:"EVM_DEXTrade_Cube",description:"DEX Trades in EVM Blockchain",source:"@site/docs/graphql-reference/objects/evm-dextrade-cube.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-dextrade-cube",permalink:"/docs/graphql-reference/objects/evm-dextrade-cube",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-dextrade-cube.mdx",tags:[],version:"current",frontMatter:{id:"evm-dextrade-cube",title:"EVM_DEXTrade_Cube",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_Call_Fields_Transaction",permalink:"/docs/graphql-reference/objects/evm-call-fields-transaction"},next:{title:"EVM_DEXTrade_Fields_Block_L1",permalink:"/docs/graphql-reference/objects/evm-dextrade-fields-block-l1"}},i={},s=()=>(0,o.kt)(l.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,o.kt)(l.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,o.kt)(l.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),_=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Block</b></code><Bullet /><code>EVM_DEXTrade_Fields_Block</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebblockbcodeevm_dextrade_fields_block-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Call</b></code><Bullet /><code>EVM_DEXTrade_Fields_Call</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcallbcodeevm_dextrade_fields_call-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>ChainId</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebchainidbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.ChainId.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubechainidbminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.ChainId.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubechainidbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Fee</b></code><Bullet /><code>EVM_DEXTrade_Fields_Fee</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebfeebcodeevm_dextrade_fields_fee-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Log</b></code><Bullet /><code>EVM_DEXTrade_Fields_Log</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeblogbcodeevm_dextrade_fields_log-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Receipt</b></code><Bullet /><code>EVM_DEXTrade_Fields_Receipt</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebreceiptbcodeevm_dextrade_fields_receipt-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Trade</b></code><Bullet /><code>EVM_DEXTrade_Fields_Trade</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebtradebcodeevm_dextrade_fields_trade-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>Transaction</b></code><Bullet /><code>EVM_DEXTrade_Fields_Transaction</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebtransactionbcodeevm_dextrade_fields_transaction-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>TransactionStatus</b></code><Bullet /><code>EVM_DEXTrade_Fields_TransactionStatus</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebtransactionstatusbcodeevm_dextrade_fields_transactionstatus-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>average</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebaveragebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.average.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeaveragebofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.average.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeaveragebifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>contingency</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcontingencybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.contingency.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.contingency.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.contingency.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcorrelationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.correlation.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.correlation.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.correlation.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>count</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcountbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.count.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecountbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.count.<b>selectWhere</b></code><Bullet /><code>Metric_filter_String</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecountbselectwherebcodemetric_filter_string-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>covariance</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcovariancebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.covariance.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.covariance.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.covariance.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>cramers</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcramersbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramersbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramersbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramersbwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>cramers_bias_corrected</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebcramers_bias_correctedbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers_bias_corrected.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers_bias_corrected.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.cramers_bias_corrected.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>dispersion</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebdispersionbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.dispersion.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubedispersionbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.dispersion.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubedispersionbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>entropy</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebentropybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.entropy.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeentropybofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.entropy.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeentropybifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>kurtosis</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebkurtosisbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.kurtosis.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubekurtosisbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.kurtosis.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubekurtosisbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>median</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebmedianbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.median.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubemedianbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.median.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubemedianbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>quantile</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebquantilebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.quantile.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubequantilebmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.quantile.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubequantilebselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.quantile.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubequantilebofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.quantile.<b>level</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubequantileblevelbcodefloat-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>rank_correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebrank_correlationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.rank_correlation.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.rank_correlation.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.rank_correlation.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>skew</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebskewbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.skew.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeskewbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.skew.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeskewbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>standard_deviation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebstandard_deviationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.standard_deviation.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubestandard_deviationbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.standard_deviation.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubestandard_deviationbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>sum</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebsumbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.sum.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubesumbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.sum.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubesumbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>theils</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebtheilsbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.theils.<b>of</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbofbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.theils.<b>with</b></code><Bullet /><code>EVM_DEXTrade_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbwithbcodeevm_dextrade_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.theils.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.<b>uniq</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_cubebuniqbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.uniq.<b>of</b></code><Bullet /><code>[EVM_DEXTrade_EnumFields]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbofbcodeevm_dextrade_enumfields--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.uniq.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Cube.uniq.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:"Member of",id:"member-of",level:3}],f=e=>{let{dataOpen:t,dataClose:a,children:d,startOpen:n=!1}=e;const[c,i]=(0,l.useState)(n);return(0,o.kt)("details",(0,r.Z)({},c?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},c?t:a),c&&d)},b={Bullet:s,SpecifiedBy:m,Badge:u,toc:_,Details:f},k="wrapper";function h(e){let{components:t,...a}=e;return(0,o.kt)(k,(0,r.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"DEX Trades in EVM Blockchain"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_DEXTrade_Cube {\n  Block: EVM_DEXTrade_Fields_Block\n  Call: EVM_DEXTrade_Fields_Call\n  ChainId(\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n    if: EVM_DEXTrade_Filter\n  ): String\n  Fee: EVM_DEXTrade_Fields_Fee\n  Log: EVM_DEXTrade_Fields_Log\n  Receipt: EVM_DEXTrade_Fields_Receipt\n  Trade: EVM_DEXTrade_Fields_Trade\n  Transaction: EVM_DEXTrade_Fields_Transaction\n  TransactionStatus: EVM_DEXTrade_Fields_TransactionStatus\n  average(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  contingency(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  correlation(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  count(\n    distinct: [EVM_DEXTrade_EnumFields]\n    if: EVM_DEXTrade_Filter\n    selectWhere: Metric_filter_String\n  ): String\n  covariance(\n    selectWhere: Metric_filter_Float\n    if: EVM_DEXTrade_Filter\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n  ): Float\n  cramers(\n    if: EVM_DEXTrade_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n  ): Float\n  cramers_bias_corrected(\n    if: EVM_DEXTrade_Filter\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n    selectWhere: Metric_filter_Float\n  ): Float\n  dispersion(\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n    selectWhere: Metric_filter_Float\n  ): Float\n  entropy(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  kurtosis(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  median(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  quantile(\n    if: EVM_DEXTrade_Filter\n    method: OLAP_Metric_Calculation_Method_Exact\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    level: Float = 0.5\n  ): Float\n  rank_correlation(\n    selectWhere: Metric_filter_Float\n    if: EVM_DEXTrade_Filter\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n  ): Float\n  skew(\n    selectWhere: Metric_filter_Float\n    if: EVM_DEXTrade_Filter\n    of: EVM_DEXTrade_NumFields\n  ): Float\n  standard_deviation(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  sum(\n    selectWhere: Metric_filter_String\n    of: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): String\n  theils(\n    selectWhere: Metric_filter_Float\n    of: EVM_DEXTrade_NumFields\n    with: EVM_DEXTrade_NumFields\n    if: EVM_DEXTrade_Filter\n  ): Float\n  uniq(\n    selectWhere: Metric_filter_String\n    of: [EVM_DEXTrade_EnumFields]\n    if: EVM_DEXTrade_Filter\n    method: OLAP_Metric_Calculation_Method_Exact\n  ): String\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebblockbcodeevm_dextrade_fields_block-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Block"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-block"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Block"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Block fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcallbcodeevm_dextrade_fields_call-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Call"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-call"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Call"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Call fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebchainidbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"ChainId"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"ChainId value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubechainidbmaximumbcodeevm_dextrade_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.ChainId.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubechainidbminimumbcodeevm_dextrade_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.ChainId.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubechainidbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.ChainId.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebfeebcodeevm_dextrade_fields_fee-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Fee"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-fee"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Fee"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Fee fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubeblogbcodeevm_dextrade_fields_log-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Log"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-log"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Log"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Log fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebreceiptbcodeevm_dextrade_fields_receipt-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Receipt"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-receipt"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Receipt"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Receipt fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebtradebcodeevm_dextrade_fields_trade-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Trade"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-trade"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Trade"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Trade fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebtransactionbcodeevm_dextrade_fields_transaction-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"Transaction"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-transaction"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Transaction"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Transaction fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebtransactionstatusbcodeevm_dextrade_fields_transactionstatus-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"TransactionStatus"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-transaction-status"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_TransactionStatus"))," ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"TransactionStatus fields")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebaveragebcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"average"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Average of the values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubeaveragebselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.average.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeaveragebofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.average.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Average of the values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeaveragebifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.average.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcontingencybcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"contingency"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Contingency coefficient between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.contingency.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.contingency.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Contingency coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.contingency.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Contingency coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecontingencybifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.contingency.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcorrelationbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"correlation"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Pearson correlation coefficient between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.correlation.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.correlation.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Pearson correlation coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.correlation.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Pearson correlation coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecorrelationbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.correlation.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcountbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"count"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Count records or uniques of arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecountbdistinctbcodeevm_dextrade_enumfields--"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.count.",(0,o.kt)("b",null,"distinct"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-enum-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"[EVM_DEXTrade_EnumFields]"))," ",(0,o.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Count distinct values of the field")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecountbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.count.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecountbselectwherebcodemetric_filter_string-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.count.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcovariancebcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"covariance"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Covariance between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.covariance.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.covariance.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.covariance.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Covariance between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecovariancebwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.covariance.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Covariance between two arguments")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcramersbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"cramers"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecramersbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramersbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramersbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramersbwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient between two arguments")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebcramers_bias_correctedbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"cramers_bias_corrected"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient with bias correction between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers_bias_corrected.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers_bias_corrected.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers_bias_corrected.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubecramers_bias_correctedbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.cramers_bias_corrected.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebdispersionbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"dispersion"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Dispersion for a set of values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubedispersionbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.dispersion.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Argument for Dispersion for a set of values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubedispersionbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.dispersion.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubedispersionbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.dispersion.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebentropybcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"entropy"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Entropy for a set of values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubeentropybselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.entropy.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeentropybofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.entropy.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Entropy for a set of values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeentropybifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.entropy.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebkurtosisbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"kurtosis"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Kurtosis for a set of values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubekurtosisbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.kurtosis.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubekurtosisbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.kurtosis.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Kurtosis for a set of values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubekurtosisbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.kurtosis.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebmedianbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"median"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Median for a set of values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubemedianbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.median.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubemedianbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.median.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Median for a set of values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubemedianbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.median.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebquantilebcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"quantile"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Approximate quantile of a numeric data sequence"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubequantilebifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.quantile.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubequantilebmethodbcodeolap_metric_calculation_method_exact-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.quantile.",(0,o.kt)("b",null,"method"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,o.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubequantilebselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.quantile.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubequantilebofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.quantile.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for quantile")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubequantileblevelbcodefloat-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.quantile.",(0,o.kt)("b",null,"level"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of ","[0.01, 0.99]",". Default value: 0.5. At level=0.5 the function calculates median.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebrank_correlationbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"rank_correlation"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Rank correlation coefficient between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.rank_correlation.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.rank_correlation.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.rank_correlation.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Rank correlation coefficient between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cuberank_correlationbwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.rank_correlation.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Rank correlation coefficient between two arguments")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebskewbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"skew"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Skew for a set of values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubeskewbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.skew.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeskewbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.skew.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeskewbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.skew.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Skew for a set of values")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebstandard_deviationbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"standard_deviation"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Standard deviation of the values"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubestandard_deviationbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.standard_deviation.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubestandard_deviationbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.standard_deviation.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for Standard deviation of the values")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubestandard_deviationbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.standard_deviation.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebsumbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"sum"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Sum values of argument"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubesumbselectwherebcodemetric_filter_string-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.sum.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubesumbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.sum.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Argument for sum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubesumbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.sum.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebtheilsbcodefloat-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"theils"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,o.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Theil's U uncertainty coefficient, coefficient with bias correction between two arguments"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbselectwherebcodemetric_filter_float-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.theils.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbofbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.theils.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbwithbcodeevm_dextrade_numfields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.theils.",(0,o.kt)("b",null,"with"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-num-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_NumFields"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubetheilsbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.theils.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_cubebuniqbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.",(0,o.kt)("b",null,"uniq"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(u,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Count unique records"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbselectwherebcodemetric_filter_string-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.uniq.",(0,o.kt)("b",null,"selectWhere"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,o.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbofbcodeevm_dextrade_enumfields--"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.uniq.",(0,o.kt)("b",null,"of"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-enum-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"[EVM_DEXTrade_EnumFields]"))," ",(0,o.kt)(u,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Uniq values of the field")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbifbcodeevm_dextrade_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.uniq.",(0,o.kt)("b",null,"if"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,o.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Cube.uniq.",(0,o.kt)("b",null,"method"))),(0,o.kt)(s,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,o.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,o.kt)(u,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM")),"  ",(0,o.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);