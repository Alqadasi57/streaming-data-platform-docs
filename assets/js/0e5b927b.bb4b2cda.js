"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5263],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),s=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,b=p["".concat(u,".").concat(m)]||p[m]||i[m]||o;return a?r.createElement(b,l(l({ref:t},d),{},{components:a})):r.createElement(b,l({ref:t},d))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[p]="string"==typeof e?e:n,l[1]=c;for(var s=2;s<o;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},38887:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>i,Bullet:()=>d,Details:()=>b,SpecifiedBy:()=>p,assets:()=>s,contentTitle:()=>c,default:()=>k,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var r=a(87462),n=a(67294),o=a(3905);const l={id:"blocks-update-arg-enum",title:"blocks_update_arg_enum",hide_table_of_contents:!1},c=void 0,u={unversionedId:"graphql-reference/enums/blocks-update-arg-enum",id:"graphql-reference/enums/blocks-update-arg-enum",title:"blocks_update_arg_enum",description:"Type of algorithm to filter block updates",source:"@site/docs/graphql-reference/enums/blocks-update-arg-enum.mdx",sourceDirName:"graphql-reference/enums",slug:"/graphql-reference/enums/blocks-update-arg-enum",permalink:"/docs/graphql-reference/enums/blocks-update-arg-enum",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/enums/blocks-update-arg-enum.mdx",tags:[],version:"current",frontMatter:{id:"blocks-update-arg-enum",title:"blocks_update_arg_enum",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"blocks_query_arg_enum",permalink:"/docs/graphql-reference/enums/blocks-query-arg-enum"},next:{title:"dataset_arg_enum",permalink:"/docs/graphql-reference/enums/dataset-arg-enum"}},s={},d=()=>(0,o.kt)(n.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,o.kt)(n.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),i=e=>(0,o.kt)(n.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),m=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>blocks_update_arg_enum.<b>head</b></code>",id:"code-style-fontweight-normal-blocks_update_arg_enumbheadbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>blocks_update_arg_enum.<b>all</b></code>",id:"code-style-fontweight-normal-blocks_update_arg_enumballbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>blocks_update_arg_enum.<b>head_updates</b></code>",id:"code-style-fontweight-normal-blocks_update_arg_enumbhead_updatesbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>blocks_update_arg_enum.<b>branches_updates</b></code>",id:"code-style-fontweight-normal-blocks_update_arg_enumbbranches_updatesbcode",level:4},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:a,children:l,startOpen:c=!1}=e;const[u,s]=(0,n.useState)(c);return(0,o.kt)("details",(0,r.Z)({},u?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),s((e=>!e))},style:{listStyle:"none"}},u?t:a),u&&l)},g={Bullet:d,SpecifiedBy:p,Badge:i,toc:m,Details:b},f="wrapper";function k(e){let{components:t,...a}=e;return(0,o.kt)(f,(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Type of algorithm to filter block updates"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum blocks_update_arg_enum {\n  head\n  all\n  head_updates\n  branches_updates\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-blocks_update_arg_enumbheadbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"blocks_update_arg_enum.",(0,o.kt)("b",null,"head")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Blocks added to the head of the reorgtree, no duplicates")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-blocks_update_arg_enumballbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"blocks_update_arg_enum.",(0,o.kt)("b",null,"all")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Blocks added to the head of the reorg tree and all uncle added on branches, no duplicates")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-blocks_update_arg_enumbhead_updatesbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"blocks_update_arg_enum.",(0,o.kt)("b",null,"head_updates")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Blocks added to the head of the reorg tree, duplicates possible due to reorg. Can be used together with uncles_updates.")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-blocks_update_arg_enumbbranches_updatesbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"blocks_update_arg_enum.",(0,o.kt)("b",null,"branches_updates")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Blocks added as uncles to the branches of the reorg tree, duplicates possible due to reorg. Can be used together with head_updates.")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/graphql-reference/subscriptions/evm"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM")),"  ",(0,o.kt)(i,{class:"secondary",text:"subscription",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);