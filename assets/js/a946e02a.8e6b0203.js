"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[605],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:4},i="Crypto Dashboard Project",s={unversionedId:"usecases/crypto_dashboard",id:"usecases/crypto_dashboard",title:"Crypto Dashboard Project",description:"The following tutorial helps build a Cryptocurrency Portfolio Dashboard with React that fetches and displays the balance of different currencies for a given Ethereum address using the Bitquery Streaming API.",source:"@site/docs/usecases/crypto_dashboard.md",sourceDirName:"usecases",slug:"/usecases/crypto_dashboard",permalink:"/docs/usecases/crypto_dashboard",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/usecases/crypto_dashboard.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"NFT Analytics Dashboard - Tutorial",permalink:"/docs/usecases/nft_Analytics"},next:{title:"Data in Cloud",permalink:"/docs/category/data-in-cloud"}},l={},d=[{value:"Create App",id:"create-app",level:3},{value:"Import Statements",id:"import-statements",level:3},{value:"Functional Component",id:"functional-component",level:3},{value:"State Management with <code>useState</code> Hook",id:"state-management-with-usestate-hook",level:3},{value:"<code>fetchData</code> Method",id:"fetchdata-method",level:3},{value:"Component Render",id:"component-render",level:3},{value:"CSS Styling",id:"css-styling",level:3}],c={toc:d},p="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"crypto-dashboard-project"},"Crypto Dashboard Project"),(0,r.kt)("p",null,"The following tutorial helps build a Cryptocurrency Portfolio Dashboard with React that fetches and displays the balance of different currencies for a given Ethereum address using the Bitquery Streaming API."),(0,r.kt)("p",null,"This is how it will look ",(0,r.kt)("img",{alt:"finally",src:n(95402).Z,width:"1430",height:"924"})),(0,r.kt)("p",null,"The app has the following features:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"It renders an input field and a button to trigger the data fetching process."),(0,r.kt)("li",{parentName:"ol"},"It displays a spinner while the data is being fetched."),(0,r.kt)("li",{parentName:"ol"},"It displays a table with the currency name and the corresponding balance once the data is fetched."),(0,r.kt)("li",{parentName:"ol"},"It handles errors during the data fetching process.")),(0,r.kt)("p",null,"The app uses the following libraries and APIs:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"React: A JavaScript library for building user interfaces."),(0,r.kt)("li",{parentName:"ol"},"Axios: A promise-based HTTP client for the browser and Node.js."),(0,r.kt)("li",{parentName:"ol"},"Bitquery GraphQL API: A service that provides access to blockchain data through a GraphQL interface.")),(0,r.kt)("p",null,"To use this code, you need to have the following dependencies installed in your project:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"react"),(0,r.kt)("li",{parentName:"ol"},"react-dom"),(0,r.kt)("li",{parentName:"ol"},"axios"),(0,r.kt)("li",{parentName:"ol"},"react-icons")),(0,r.kt)("h3",{id:"create-app"},"Create App"),(0,r.kt)("p",null,"Create an empty react app with the"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx create-react-app my-app\n\n")),(0,r.kt)("p",null,"command and clear the defaults in app.js file. "),(0,r.kt)("h3",{id:"import-statements"},"Import Statements"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './portfolio.css';\nimport { FaSpinner } from 'react-icons/fa';\n\n")),(0,r.kt)("h3",{id:"functional-component"},"Functional Component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function App() {\n  const [data, setData] = useState(null);\n  const [address, setAddress] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const fetchData = () => {\n    setIsLoading(true);\n    var query = `query MyQuery {\n      EVM(dataset: combined, network: eth) {\n        BalanceUpdates(\n          where: { BalanceUpdate: { Address: { is: \"${address}\" } } }\n        ) {\n          Currency {\n            Name\n          }\n          balance: sum(of: BalanceUpdate_Amount)\n        }\n      }\n    }`;\n\n    var data = JSON.stringify({ query });\n\n    var config = {\n      method: 'post',\n      url: 'https://streaming.bitquery.io/graphql',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': 'YOUR KEY'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        setData(response.data.data.EVM.BalanceUpdates);\n        setIsLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setIsLoading(false);\n      });\n  };\n\n")),(0,r.kt)("h3",{id:"state-management-with-usestate-hook"},"State Management with ",(0,r.kt)("inlineCode",{parentName:"h3"},"useState")," Hook"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"const [data, setData] = useState(null);"),": Declares a state variable ",(0,r.kt)("inlineCode",{parentName:"li"},"data")," that is initially ",(0,r.kt)("inlineCode",{parentName:"li"},"null"),". Also defines a setter function ",(0,r.kt)("inlineCode",{parentName:"li"},"setData")," to update the state value of ",(0,r.kt)("inlineCode",{parentName:"li"},"data"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"const [address, setAddress] = useState('');"),": Declares a state variable ",(0,r.kt)("inlineCode",{parentName:"li"},"address")," that is initially an empty string. Also defines a setter function ",(0,r.kt)("inlineCode",{parentName:"li"},"setAddress")," to update the state value of ",(0,r.kt)("inlineCode",{parentName:"li"},"address"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"const [isLoading, setIsLoading] = useState(false);"),": Declares a state variable ",(0,r.kt)("inlineCode",{parentName:"li"},"isLoading")," that is initially ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),". Also defines a setter function ",(0,r.kt)("inlineCode",{parentName:"li"},"setIsLoading")," to update the state value of ",(0,r.kt)("inlineCode",{parentName:"li"},"isLoading"),".")),(0,r.kt)("h3",{id:"fetchdata-method"},(0,r.kt)("inlineCode",{parentName:"h3"},"fetchData")," Method"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"const fetchData = () => { ... }"),": Defines a method ",(0,r.kt)("inlineCode",{parentName:"li"},"fetchData")," that makes an HTTP POST request to the Bitquery API to retrieve data for the entered Ethereum address.")),(0,r.kt)("h3",{id:"component-render"},"Component Render"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'  return (\n    <div>\n      <h1>Your Portfolio</h1>\n      <input className="address-input"\n        type="text"\n        value={address}\n        onChange={(event) => setAddress(event.target.value)}\n        placeholder="Enter address"\n      />\n      <button onClick={fetchData} className="fetch-data-button"> {isLoading ? <FaSpinner className="spinner" /> : \'Fetch data\'}</button>\n      {isLoading ? (\n        <div className="loading-spinner-container">\n          <FaSpinner className="loading-spinner" />\n        </div>\n      ) : (\n        data && (\n          <table className="balance-table">\n            <thead>\n              <tr>\n                <th>Currency</th>\n                <th>Balance</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => (\n                <tr key={index}>\n                  <td>{item.Currency.Name}</td>\n                  <td>{item.balance}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("h3",{id:"css-styling"},"CSS Styling"),(0,r.kt)("p",null,"The app uses CSS classes defined in a separate portfolio.css file to style various elements:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},".balance-list {\n    display: table-cell;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 0;\n  list-style: none;\n  }\n  \n  .balance-list li {\n    display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem 0;\n  padding: 1rem 2rem;\n  font-size: 1rem;\n  background-color: #f8f8f8;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  }\n\n  \n  \n  .currency-name {\n    font-weight: bold;\n    font-size: 1.2rem;\n  margin-right: 1rem;\n  }\n  \n  .balance-amount {\n    font-size: 1.2em;\n    font-family: monospace;\n  }\n  .fetch-data-button {\n    background-color: #4CAF50;\n    color: white;\n    padding: 12px 24px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1.2em;\n  }\n  \n  .fetch-data-button:hover {\n    background-color: #3e8e41;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  \n  .fade-in {\n    animation: fadeIn 1s ease-in-out;\n  }\n\n  .address-input {\n    font-size: 1.2rem;\n    padding: 0.5rem;\n    border: none;\n    border-radius: 0.25rem;\n    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n    outline: none;\n    margin-right: 0.5rem;\n  }\n  \n")))}u.isMDXComponent=!0},95402:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/crypto_dashboard-597f11968dc7f5b5380bd56af8d772ee.gif"}}]);