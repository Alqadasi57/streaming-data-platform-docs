"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:4},i="Token Holders API",l={unversionedId:"examples/balances/tokenHolders-api",id:"examples/balances/tokenHolders-api",title:"Token Holders API",description:"The Token Holders API provides information on the holders of a specific token on a supported blockchain. This API enables developers to retrieve a list of addresses that hold a particular token, as well as additional information about each holder.",source:"@site/docs/examples/balances/tokenHolders-api.md",sourceDirName:"examples/balances",slug:"/examples/balances/tokenHolders-api",permalink:"/docs/examples/balances/tokenHolders-api",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/examples/balances/tokenHolders-api.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"BalanceUpdates API",permalink:"/docs/examples/balances/balance-api"},next:{title:"Blocks",permalink:"/docs/category/blocks"}},s={},c=[{value:"Top 10 Token Holders",id:"top-10-token-holders",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"token-holders-api"},"Token Holders API"),(0,r.kt)("p",null,"The Token Holders API provides information on the holders of a specific token on a supported blockchain. This API enables developers to retrieve a list of addresses that hold a particular token, as well as additional information about each holder."),(0,r.kt)("h2",{id:"top-10-token-holders"},"Top 10 Token Holders"),(0,r.kt)("p",null,"Here's an example query to retrieve the top 10 balance updates for a specific token contract on the Binance Smart Chain network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'query MyQuery {\n  EVM(dataset: archive, network: bsc) {\n    BalanceUpdates(\n      orderBy: {descending: BalanceUpdate_Amount}\n      limit: {count: 10}\n      where: {Currency: {SmartContract: {is: "0xb82beb6ee0063abd5fc8e544c852237aa62cbb14"}}}\n    ) {\n      BalanceUpdate {\n        Address\n      }\n      Balance: sum(of: BalanceUpdate_Amount)\n      Currency {\n        Name\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"In this query, you'll need to replace \"0x3ee2200efb3400fabb9aacf31297cbdd1d435d47\" with the contract address of the token you'd like to retrieve balance updates for."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataset: realtime"),": This parameter specifies that the real time dataset is being used."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network: bsc"),": This parameter specifies that the Binance Smart Chain (BSC) network is being queried."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"orderBy: {descending: BalanceUpdate_Amount}"),": This parameter orders the results of the query by the ",(0,r.kt)("inlineCode",{parentName:"li"},"BalanceUpdate_Amount")," field in descending order, meaning the highest balances will appear first."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit: {count: 10}"),": This parameter limits the number of results returned to 10."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'where: {Currency: {SmartContract: {is: "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47"}}, Block: {Date: {after: "2023-02-01"}}}'),': This parameter filters the results of the query based on the smart contract address "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47" and the block date after "2023-02-01". The ',(0,r.kt)("inlineCode",{parentName:"li"},"Currency")," field specifies the currency to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"SmartContract")," field specifies the smart contract address to filter by. The ",(0,r.kt)("inlineCode",{parentName:"li"},"Block")," field specifies the block to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"Date")," field specifies the date to filter by.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned Data")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Balance: sum(of: BalanceUpdate_Amount)"),": This field specifies the address and the balance amount in the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Currency { Name }"),": This field specifies the currency in which the balance is expressed. In this case, the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," of the currency is retrieved.")),(0,r.kt)("p",null,"Here's a sample of the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'\n    "BalanceUpdates": [\n      {\n        "BalanceUpdate": {\n          "Address": "0xba51d1ab95756ca4eab8737ecd450cd8f05384cf",\n          "Amount": "980.473690002807400000"\n        },\n        "Currency": {\n          "Name": "Cardano Token"\n        }\n      },\n      {\n        "BalanceUpdate": {\n          "Address": "0x51aa28cf73e5e0abb32deea73ea6e3802beca058",\n          "Amount": "97.149127271688019074"\n        },\n        "Currency": {\n          "Name": "Cardano Token"\n        }\n      },\n      {\n        "BalanceUpdate": {\n          "Address": "0xba51d1ab95756ca4eab8737ecd450cd8f05384cf",\n          "Amount": "956.556105801253600000"\n        },\n        "Currency": {\n          "Name": "Cardano Token"\n        }\n      }, \n\n')),(0,r.kt)("p",null,"You can find the graphql query ",(0,r.kt)("a",{parentName:"p",href:"https://ide.bitquery.io/Top-10-Cardano-Wallets-on-BSC_1"},"here"),"."))}u.isMDXComponent=!0}}]);