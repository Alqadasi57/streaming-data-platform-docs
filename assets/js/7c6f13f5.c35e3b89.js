"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[16909],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>u});var a=t(67294);function l(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){l(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,a,l=function(e,r){if(null==e)return{};var t,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(l[t]=e[t]);return l}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=a.createContext({}),m=function(e){var r=a.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=m(e.components);return a.createElement(d.Provider,{value:r},e.children)},s="mdxType",_={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},k=a.forwardRef((function(e,r){var t=e.components,l=e.mdxType,n=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=m(t),k=l,u=s["".concat(d,".").concat(k)]||s[k]||_[k]||n;return t?a.createElement(u,i(i({ref:r},c),{},{components:t})):a.createElement(u,i({ref:r},c))}));function u(e,r){var t=arguments,l=r&&r.mdxType;if("string"==typeof e||l){var n=t.length,i=new Array(n);i[0]=k;var o={};for(var d in r)hasOwnProperty.call(r,d)&&(o[d]=r[d]);o.originalType=e,o[s]="string"==typeof e?e:l,i[1]=o;for(var m=2;m<n;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},24600:(e,r,t)=>{t.r(r),t.d(r,{Badge:()=>_,Bullet:()=>c,Details:()=>u,SpecifiedBy:()=>s,assets:()=>m,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>k});var a=t(87462),l=t(67294),n=t(3905);const i={id:"evm-miner-reward-fields-block",title:"EVM_MinerReward_Fields_Block",hide_table_of_contents:!1},o=void 0,d={unversionedId:"graphql-reference/objects/evm-miner-reward-fields-block",id:"graphql-reference/objects/evm-miner-reward-fields-block",title:"EVM_MinerReward_Fields_Block",description:"Block fields",source:"@site/docs/graphql-reference/objects/evm-miner-reward-fields-block.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-miner-reward-fields-block",permalink:"/docs/graphql-reference/objects/evm-miner-reward-fields-block",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-miner-reward-fields-block.mdx",tags:[],version:"current",frontMatter:{id:"evm-miner-reward-fields-block",title:"EVM_MinerReward_Fields_Block",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_MinerReward_Fields_Block_Result",permalink:"/docs/graphql-reference/objects/evm-miner-reward-fields-block-result"},next:{title:"EVM_MinerReward_Fields_Reward",permalink:"/docs/graphql-reference/objects/evm-miner-reward-fields-reward"}},m={},c=()=>(0,n.kt)(l.Fragment,null,(0,n.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,n.kt)(l.Fragment,null,"Specification",(0,n.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),_=e=>(0,n.kt)(l.Fragment,null,(0,n.kt)("span",{className:"badge badge--"+e.class},e.text)),k=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>BaseFee</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbbasefeebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.BaseFee.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbasefeebmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.BaseFee.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbasefeebminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Bloom</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbbloombcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Bloom.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbloombminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Bloom.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbloombifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Coinbase</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbcoinbasebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Coinbase.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockcoinbasebminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Coinbase.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockcoinbasebifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Date</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbdatebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Date.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Date.<b>interval</b></code><Bullet /><code>OLAP_DateInterval</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebintervalbcodeolap_dateinterval-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Date.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Difficulty</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbdifficultybcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Difficulty.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockdifficultybmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Difficulty.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockdifficultybminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Extra</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbextrabcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Extra.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockextrabmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Extra.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockextrabminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>GasLimit</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbgaslimitbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.GasLimit.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockgaslimitbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.GasLimit.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockgaslimitbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>GasUsed</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbgasusedbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.GasUsed.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockgasusedbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.GasUsed.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockgasusedbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Hash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Hash.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockhashbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Hash.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockhashbifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>L1</b></code><Bullet /><code>EVM_MinerReward_Fields_Block_L1</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbl1bcodeevm_minerreward_fields_block_l1-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>MixDigest</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbmixdigestbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.MixDigest.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockmixdigestbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.MixDigest.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockmixdigestbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Nonce</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbnoncebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Nonce.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocknoncebmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Nonce.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocknoncebminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Number</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbnumberbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Number.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocknumberbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Number.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocknumberbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>ParentHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbparenthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.ParentHash.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockparenthashbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.ParentHash.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockparenthashbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>ReceiptHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbreceipthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.ReceiptHash.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockreceipthashbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.ReceiptHash.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockreceipthashbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Result</b></code><Bullet /><code>EVM_MinerReward_Fields_Block_Result</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbresultbcodeevm_minerreward_fields_block_result-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Root</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbrootbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Root.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockrootbifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Root.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockrootbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>Time</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtimebcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Time.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Time.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.Time.<b>interval</b></code><Bullet /><code>OLAP_DateTimeInterval</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebintervalbcodeolap_datetimeinterval-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>TxCount</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtxcountbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.TxCount.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxcountbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.TxCount.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxcountbifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>TxHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtxhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.TxHash.<b>if</b></code><Bullet /><code>EVM_MinerReward_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxhashbifbcodeevm_minerreward_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.TxHash.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxhashbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>UncleHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbunclehashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.UncleHash.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclehashbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.UncleHash.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclehashbminimumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.<b>UnclesCount</b></code><Bullet /><code>Int</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockbunclescountbcodeint-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.UnclesCount.<b>maximum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclescountbmaximumbcodeevm_minerreward_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_MinerReward_Fields_Block.UnclesCount.<b>minimum</b></code><Bullet /><code>EVM_MinerReward_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclescountbminimumbcodeevm_minerreward_comparefields-",level:5},{value:"Member of",id:"member-of",level:3}],u=e=>{let{dataOpen:r,dataClose:t,children:i,startOpen:o=!1}=e;const[d,m]=(0,l.useState)(o);return(0,n.kt)("details",(0,a.Z)({},d?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,n.kt)("summary",{onClick:e=>{e.preventDefault(),m((e=>!e))},style:{listStyle:"none"}},d?r:t),d&&i)},p={Bullet:c,SpecifiedBy:s,Badge:_,toc:k,Details:u},f="wrapper";function h(e){let{components:r,...t}=e;return(0,n.kt)(f,(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Block fields"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_MinerReward_Fields_Block {\n  BaseFee(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Bloom(\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n  ): String\n  Coinbase(\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n  ): String\n  Date(\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    interval: OLAP_DateInterval\n    if: EVM_MinerReward_Filter\n  ): String\n  Difficulty(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Extra(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  GasLimit(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  GasUsed(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Hash(\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n  ): String\n  L1: EVM_MinerReward_Fields_Block_L1\n  MixDigest(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Nonce(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Number(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  ParentHash(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  ReceiptHash(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  Result: EVM_MinerReward_Fields_Block_Result\n  Root(\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n  ): String\n  Time(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    interval: OLAP_DateTimeInterval\n  ): DateTime\n  TxCount(\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n  ): Int\n  TxHash(\n    minimum: EVM_MinerReward_CompareFields\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n  ): String\n  UncleHash(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): String\n  UnclesCount(\n    if: EVM_MinerReward_Filter\n    maximum: EVM_MinerReward_CompareFields\n    minimum: EVM_MinerReward_CompareFields\n  ): Int\n}\n")),(0,n.kt)("h3",{id:"fields"},"Fields"),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbbasefeebcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"BaseFee"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"BaseFee value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockbasefeebifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.BaseFee.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbasefeebmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.BaseFee.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbasefeebminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.BaseFee.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbbloombcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Bloom"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Bloom value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockbloombmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Bloom.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbloombminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Bloom.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbloombifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Bloom.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbcoinbasebcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Coinbase"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Coinbase value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockcoinbasebmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Coinbase.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockcoinbasebminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Coinbase.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockcoinbasebifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Coinbase.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbdatebcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Date"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Date value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Date.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Date.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebintervalbcodeolap_dateinterval-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Date.",(0,n.kt)("b",null,"interval"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/olap-date-interval"},(0,n.kt)("inlineCode",{parentName:"a"},"OLAP_DateInterval"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Date interval in specified units")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockdatebifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Date.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbdifficultybcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Difficulty"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Difficulty value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockdifficultybifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Difficulty.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockdifficultybmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Difficulty.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockdifficultybminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Difficulty.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbextrabcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Extra"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Extra value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockextrabifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Extra.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockextrabmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Extra.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockextrabminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Extra.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbgaslimitbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"GasLimit"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"GasLimit value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockgaslimitbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasLimit.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockgaslimitbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasLimit.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockgaslimitbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasLimit.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbgasusedbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"GasUsed"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"GasUsed value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockgasusedbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasUsed.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockgasusedbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasUsed.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockgasusedbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.GasUsed.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbhashbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Hash"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Hash value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockhashbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Hash.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockhashbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Hash.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockhashbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Hash.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbl1bcodeevm_minerreward_fields_block_l1-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"L1"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-miner-reward-fields-block-l1"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Fields_Block_L1"))," ",(0,n.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"L1 fields")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbmixdigestbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"MixDigest"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"MixDigest value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockmixdigestbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.MixDigest.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockmixdigestbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.MixDigest.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockmixdigestbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.MixDigest.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbnoncebcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Nonce"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Nonce value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blocknoncebifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Nonce.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocknoncebmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Nonce.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocknoncebminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Nonce.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbnumberbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Number"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Number value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blocknumberbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Number.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocknumberbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Number.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocknumberbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Number.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbparenthashbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"ParentHash"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"ParentHash value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockparenthashbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ParentHash.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockparenthashbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ParentHash.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockparenthashbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ParentHash.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbreceipthashbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"ReceiptHash"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"ReceiptHash value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockreceipthashbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ReceiptHash.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockreceipthashbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ReceiptHash.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockreceipthashbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.ReceiptHash.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbresultbcodeevm_minerreward_fields_block_result-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Result"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-miner-reward-fields-block-result"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Fields_Block_Result"))," ",(0,n.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Result fields")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbrootbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Root"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Root value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockrootbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Root.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockrootbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Root.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockrootbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Root.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtimebcodedatetime-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"Time"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/date-time"},(0,n.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Time value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Time.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Time.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Time.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktimebintervalbcodeolap_datetimeinterval-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.Time.",(0,n.kt)("b",null,"interval"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/olap-date-time-interval"},(0,n.kt)("inlineCode",{parentName:"a"},"OLAP_DateTimeInterval"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Time interval in specified units")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtxcountbcodeint-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"TxCount"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/int"},(0,n.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"TxCount value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxcountbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxCount.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxcountbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxCount.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxcountbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxCount.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbtxhashbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"TxHash"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"TxHash value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxhashbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxHash.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxhashbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxHash.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blocktxhashbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.TxHash.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbunclehashbcodestring-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"UncleHash"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,n.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"UncleHash value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclehashbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UncleHash.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclehashbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UncleHash.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclehashbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UncleHash.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h4",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockbunclescountbcodeint-"},(0,n.kt)("a",{parentName:"h4",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.",(0,n.kt)("b",null,"UnclesCount"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/int"},(0,n.kt)("inlineCode",{parentName:"a"},"Int"))," ",(0,n.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"UnclesCount value"),(0,n.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclescountbifbcodeevm_minerreward_filter-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UnclesCount.",(0,n.kt)("b",null,"if"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-miner-reward-filter"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Filter"))," ",(0,n.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,n.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclescountbmaximumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UnclesCount.",(0,n.kt)("b",null,"maximum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,n.kt)("h5",{id:"code-style-fontweight-normal-evm_minerreward_fields_blockunclescountbminimumbcodeevm_minerreward_comparefields-"},(0,n.kt)("a",{parentName:"h5",href:"#"},(0,n.kt)("code",{style:{fontWeight:"normal"}},"EVM_MinerReward_Fields_Block.UnclesCount.",(0,n.kt)("b",null,"minimum"))),(0,n.kt)(c,{mdxType:"Bullet"}),(0,n.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-miner-reward-compare-fields"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_CompareFields"))," ",(0,n.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,n.kt)("h3",{id:"member-of"},"Member of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm-miner-reward-cube"},(0,n.kt)("inlineCode",{parentName:"a"},"EVM_MinerReward_Cube")),"  ",(0,n.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})))}h.isMDXComponent=!0}}]);