"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[38313],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>y});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(r),p=a,y=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return r?t.createElement(y,i(i({ref:n},d),{},{components:r})):t.createElement(y,i({ref:n},d))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},43632:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const o={sidebar_position:5},i="Token Trades API",c={unversionedId:"examples/dextrades/token-trades-apis",id:"examples/dextrades/token-trades-apis",title:"Token Trades API",description:"Historical Token Trades & Price API",source:"@site/docs/examples/dextrades/token-trades-apis.md",sourceDirName:"examples/dextrades",slug:"/examples/dextrades/token-trades-apis",permalink:"/docs/examples/dextrades/token-trades-apis",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/examples/dextrades/token-trades-apis.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Pools API",permalink:"/docs/examples/dextrades/pools-api"},next:{title:"Address Trades API",permalink:"/docs/examples/dextrades/trades-of-an-address-api"}},s={},l=[{value:"Historical Token Trades &amp; Price API",id:"historical-token-trades--price-api",level:2},{value:"Latest Token Trades",id:"latest-token-trades",level:2},{value:"Token trade from a specific DEX",id:"token-trade-from-a-specific-dex",level:2},{value:"Subscribe to new token trades (Webhook)",id:"subscribe-to-new-token-trades-webhook",level:2}],d={toc:l},u="wrapper";function m(e){let{components:n,...r}=e;return(0,a.kt)(u,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"token-trades-api"},"Token Trades API"),(0,a.kt)("h2",{id:"historical-token-trades--price-api"},"Historical Token Trades & Price API"),(0,a.kt)("p",null,"DEXTrades API can give you historical trades. Let's see an example where we get trades of ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.bitquery.io/ethereum/token/0x5283d291dbcf85356a21ba090e6db59121208b44"},"BLUR Token")," in the past. As you can see, we are using Block -> Time filter, which includes the time. If you want to filter by date, then use Block -> Date. You can also use Block -> Number if you want to filter based on block height."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  EVM(dataset: combined, network: eth) {\n    buyside: DEXTrades(\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0x5283d291dbcf85356a21ba090e6db59121208b44"}}}}, Block: {Time: {since: "2023-03-03T01:00:00Z", till: "2023-03-05T05:15:23Z"}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n    sellside: DEXTrades(\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0x5283d291dbcf85356a21ba090e6db59121208b44"}}}}, Block: {Time: {since: "2023-03-03T01:00:00Z", till: "2023-03-05T05:15:23Z"}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n  }\n}\n\n')),(0,a.kt)("p",null,"Open the above query on GraphQL IDE using this ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/token-trades-bw-a-time_1"},"link"),"."),(0,a.kt)("h2",{id:"latest-token-trades"},"Latest Token Trades"),(0,a.kt)("p",null,"To get the latest token trades you just need to sort by Block -> Time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  EVM(dataset: combined, network: eth) {\n    buyside: DEXTrades(\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0x5283d291dbcf85356a21ba090e6db59121208b44"}}}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n    sellside: DEXTrades(\n      limit: {count: 10}\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0x5283d291dbcf85356a21ba090e6db59121208b44"}}}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n  }\n}\n\n')),(0,a.kt)("p",null,"Open the above query on GraphQL IDE using this ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/latest-trades-for-a-token---both-buy-and-sell"},"link")),(0,a.kt)("h2",{id:"token-trade-from-a-specific-dex"},"Token trade from a specific DEX"),(0,a.kt)("p",null,"If you are looking for token trades on a specific dex, use the following API as an example. Here we are getting ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.bitquery.io/ethereum/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"WETH Token")," trades from the Uniswap V3 DEX. You can also use the factory contract of Uniswap-like protocols in the DEX ->  OwnerAddress filter to get trades for that DEX."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  EVM(dataset: combined, network: eth) {\n    buyside: DEXTrades(\n      limit: {count: 5}\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"}}}, Dex: {ProtocolName: {is: "uniswap_v3"}}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n        Dex {\n          ProtocolFamily\n          ProtocolName\n          SmartContract\n          Pair {\n            SmartContract\n          }\n        }\n      }\n    }\n  }\n}\n\n')),(0,a.kt)("p",null,"Open the above query on GraphQL IDE using this ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/token-trades-for-a-specific-DEX_1"},"link"),"."),(0,a.kt)("h2",{id:"subscribe-to-new-token-trades-webhook"},"Subscribe to new token trades (Webhook)"),(0,a.kt)("p",null,"You can use GraphQL subscription (Webhook) to subscribe to latest trades. In the following example we are subscribing to latest trades for ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.bitquery.io/ethereum/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"WETH Token"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'subscription {\n  EVM(network: eth, trigger_on: head) {\n    buyside: DEXTrades(\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"}}}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n    sellside: DEXTrades(\n      orderBy: {descending: Block_Time}\n      where: {Trade: {Buy: {Currency: {SmartContract: {is: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"}}}}}\n    ) {\n      Block {\n        Number\n        Time\n      }\n      Transaction {\n        From\n        To\n        Hash\n      }\n      Trade {\n        Buy {\n          Amount\n          Buyer\n          Currency {\n            Name\n            Symbol\n            SmartContract\n          }\n          Seller\n          Price\n        }\n        Sell {\n          Amount\n          Buyer\n          Currency {\n            Name\n            SmartContract\n            Symbol\n          }\n          Seller\n          Price\n        }\n      }\n    }\n  }\n}\n\n')),(0,a.kt)("p",null,"Open the above query on GraphQL IDE using this ",(0,a.kt)("a",{parentName:"p",href:"https://graphql.bitquery.io/ide/latest-token-trades-subscription"},"link")))}m.isMDXComponent=!0}}]);