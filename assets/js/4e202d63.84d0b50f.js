"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),h=r,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},92249:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:4},l="Token Holders API",o={unversionedId:"examples/balances/tokenHolders-api",id:"examples/balances/tokenHolders-api",title:"Token Holders API",description:"The Token Holders API provides information on the holders of a specific token on a supported blockchain. This API enables developers to retrieve a list of addresses that hold a particular token, as well as additional information about each holder.",source:"@site/docs/examples/balances/tokenHolders-api.md",sourceDirName:"examples/balances",slug:"/examples/balances/tokenHolders-api",permalink:"/docs/examples/balances/tokenHolders-api",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/examples/balances/tokenHolders-api.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"BalanceUpdates API",permalink:"/docs/examples/balances/balance-api"},next:{title:"Blocks",permalink:"/docs/category/blocks"}},s={},d=[{value:"Top 10 Token Holders",id:"top-10-token-holders",level:2},{value:"Top Trending tokens based on Token holders",id:"top-trending-tokens-based-on-token-holders",level:2},{value:"Top NFT tokens based on holders",id:"top-nft-tokens-based-on-holders",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"token-holders-api"},"Token Holders API"),(0,r.kt)("p",null,"The Token Holders API provides information on the holders of a specific token on a supported blockchain. This API enables developers to retrieve a list of addresses that hold a particular token, as well as additional information about each holder."),(0,r.kt)("h2",{id:"top-10-token-holders"},"Top 10 Token Holders"),(0,r.kt)("p",null,"Here's an example query to retrieve the top 10 balance updates for a specific token contract on the Ethereum network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'query MyQuery {\n  EVM(dataset: combined, network: eth) {\n    BalanceUpdates(\n      orderBy: {descendingByField: "Balance"}\n      limit: {count: 10}\n      where: {Currency: {SmartContract: {is: "0x5Af0D9827E0c53E4799BB226655A1de152A425a5"}}, Block: {Date: {after: "2023-02-01"}}}\n    ) {\n      BalanceUpdate {\n        Address\n      }\n      Balance: sum(of: BalanceUpdate_Amount, selectWhere: {gt: "0"})\n    }\n  }\n}\n\n')),(0,r.kt)("p",null,"In this query, you'll need to replace \"0x5Af0D9827E0c53E4799BB226655A1de152A425a5\" with the contract address of the token you'd like to retrieve balance updates for."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataset: combined"),": This parameter specifies that the dataset has both realtime and archive data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network: eth"),": This parameter specifies that the Ethereum network is being queried."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'orderBy: {descendingByField: "Balance"}'),": This parameter orders the results of the query by the ",(0,r.kt)("inlineCode",{parentName:"li"},"Balance")," field in descending order, meaning the highest balances will appear first."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit: {count: 10}"),": This parameter limits the number of results returned to 10."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'where: {Currency: {SmartContract: {is: "0x5Af0D9827E0c53E4799BB226655A1de152A425a5"}}, Block: {Date: {after: "2023-02-01"}}}'),': This parameter filters the results of the query based on the smart contract address "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47" and the block date after "2023-02-01". The ',(0,r.kt)("inlineCode",{parentName:"li"},"Currency")," field specifies the currency to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"SmartContract")," field specifies the smart contract address to filter by. The ",(0,r.kt)("inlineCode",{parentName:"li"},"Block")," field specifies the block to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"Date")," field specifies the date to filter by.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned Data")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Balance: sum(of: BalanceUpdate_Amount)"),": This field specifies the address and the balance amount in the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Currency { Name }"),": This field specifies the currency in which the balance is expressed. In this case, the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," of the currency is retrieved.")),(0,r.kt)("p",null,"Here's a sample of the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},' "BalanceUpdates": [\n      {\n        "Balance": "431",\n        "BalanceUpdate": {\n          "Address": "0x29469395eaf6f95920e59f858042f0e28d98a20b"\n        }\n      },\n      {\n        "Balance": "140",\n        "BalanceUpdate": {\n          "Address": "0x398d282487b44b6e53ce0aebca3cb60c3b6325e9"\n        }\n      },\n')),(0,r.kt)("p",null,"You can find the graphql query ",(0,r.kt)("a",{parentName:"p",href:"https://ide.bitquery.io/top-MILADY-MAKER-NFT-holders"},"here"),"."),(0,r.kt)("h2",{id:"top-trending-tokens-based-on-token-holders"},"Top Trending tokens based on Token holders"),(0,r.kt)("p",null,"Here's an example query to fetch the top 10 trending tokens based on their holders on the Ethereum network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'query MyQuery {\n  EVM(network: eth, dataset: combined) {\n    BalanceUpdates(\n      where: { Block: {Date: {since: "2023-06-01"}}, BalanceUpdate: {Amount: {gt: "0"}}}\n      orderBy: {descendingByField: "No_Holders"}\n      limit: {count: 10}\n    ) {\n      No_Holders: count(distinct: BalanceUpdate_Address)\n      Currency {\n        Name\n        SmartContract\n      }\n    }\n  }\n}\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataset: combined"),": This parameter specifies that the dataset has both realtime and archive data."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network: eth"),": This parameter specifies that the Ethereum network is being queried."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'orderBy: {descendingByField: "No_Holders"}'),": This parameter orders the results of the query by the ",(0,r.kt)("inlineCode",{parentName:"li"},"No_Holders")," field in descending order, meaning the currency with the highest number of holders will appear first in the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit: {count: 10}"),": This parameter limits the number of results returned to 10."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'where: { Block: {Date: {since: "2023-06-01"}}, BalanceUpdate: {Amount: {gt: "0"}}}'),": The where parameter in the query filters the results based on mentioned conditions. The ",(0,r.kt)("inlineCode",{parentName:"li"},"Block")," field specifies the block to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"Date")," field specifies the date to filter by. ",(0,r.kt)("inlineCode",{parentName:"li"},'BalanceUpdate: {Amount: {gt: "0"}}')," filters the results to include only balance updates with amounts greater than zero.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned Data")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"No_Holders: count(distinct: BalanceUpdate_Address)"),": This field specifies the number of holders of token in the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Currency { Name SmartContract }"),": This field specifies the Currency details. In this case, the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," represents the name of the currency  and the ",(0,r.kt)("inlineCode",{parentName:"li"},"SmartContract")," field, which contains the address of the currency's smart contract.")),(0,r.kt)("p",null,"Here's a sample of the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"BalanceUpdates": [\n        {\n          "Currency": {\n            "Name": "",\n            "SmartContract": "0x"\n          },\n          "No_Holders": "6951766"\n        },\n        {\n          "Currency": {\n            "Name": "Wrapped Ether",\n            "SmartContract": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"\n          },\n          "No_Holders": "3307186"\n        },\n')),(0,r.kt)("p",null,"You can find the graphql query ",(0,r.kt)("a",{parentName:"p",href:"https://ide.bitquery.io/Trending_Token_based_on_holders"},"here"),"."),(0,r.kt)("h2",{id:"top-nft-tokens-based-on-holders"},"Top NFT tokens based on holders"),(0,r.kt)("p",null,"Here's an example query to fetch the Top 10 NFT tokens based on their holders on the Ethereum network:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'query MyQuery {\n  EVM(network: eth, dataset: combined) {\n    BalanceUpdates(\n      where: {Currency: {Fungible: false}, Block: {Date: {since: "2023-06-01"}}, BalanceUpdate: {Amount: {gt: "0"}}}\n      orderBy: {descendingByField: "No_Holders"}\n      limit: {count: 10}\n    ) {\n      No_Holders: count(distinct: BalanceUpdate_Address)\n      Currency {\n        Name\n        SmartContract\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataset: combined"),": This parameter specifies that the dataset has both realtime and archive data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network: eth"),": This parameter specifies that the Ethereum network is being queried."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'orderBy: {descendingByField: "No_Holders"}'),": This parameter orders the results of the query by the ",(0,r.kt)("inlineCode",{parentName:"li"},"No_Holders")," field in descending order, meaning the currency with the highest number of holders will appear first."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"limit: {count: 10}"),": This parameter limits the number of results returned to 10."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'where: {Currency: {Fungible: false}, Block: {Date: {since: "2023-06-01"}}, BalanceUpdate: {Amount: {gt: "0"}}}'),": It filters the results based on specific conditions. ",(0,r.kt)("inlineCode",{parentName:"li"},"Currency: { Fungible: false }")," filters out fungible currencies, indicating only non-fungible tokens to be included. The ",(0,r.kt)("inlineCode",{parentName:"li"},"Block")," field specifies the block to filter by, and the ",(0,r.kt)("inlineCode",{parentName:"li"},"Date")," field specifies the date to filter by. ",(0,r.kt)("inlineCode",{parentName:"li"},'BalanceUpdate: {Amount: {gt: "0"}}')," filters the results to include only balance updates with amounts greater than zero.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned Data")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"No_Holders: count(distinct: BalanceUpdate_Address)"),": This field specifies the number of holders of particular token in the results."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Currency { Name SmartContract }"),": This field specifies the currency. In this case, the ",(0,r.kt)("inlineCode",{parentName:"li"},"Name")," represents the name of the currency  and the ",(0,r.kt)("inlineCode",{parentName:"li"},"SmartContract")," field, represents the address of the currency's smart contract.")),(0,r.kt)("p",null,"Here's a sample of the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"BalanceUpdates": [\n        {\n          "Currency": {\n            "Name": "XTREME PIXELS",\n            "SmartContract": "0x0c9663115b36fa95d18e71d59054117bcb0342ef"\n          },\n          "No_Holders": "65040"\n        },\n        {\n          "Currency": {\n            "Name": "ARGUS GENESIS \u25e2 \u2726 \u25e3",\n            "SmartContract": "0x9d7987d74c0b3ca8e8472f90c713c456dd656be8"\n          },\n          "No_Holders": "29118"\n        },\n')),(0,r.kt)("p",null,"You can find the graphql query ",(0,r.kt)("a",{parentName:"p",href:"https://ide.bitquery.io/Top_NFTs_based_on_token_holder"},"here"),"."))}u.isMDXComponent=!0}}]);