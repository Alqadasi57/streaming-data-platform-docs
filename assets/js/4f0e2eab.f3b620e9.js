"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5492],{3905:(e,l,t)=>{t.d(l,{Zo:()=>d,kt:()=>b});var o=t(67294);function a(e,l,t){return l in e?Object.defineProperty(e,l,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[l]=t,e}function c(e,l){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);l&&(o=o.filter((function(l){return Object.getOwnPropertyDescriptor(e,l).enumerable}))),t.push.apply(t,o)}return t}function n(e){for(var l=1;l<arguments.length;l++){var t=null!=arguments[l]?arguments[l]:{};l%2?c(Object(t),!0).forEach((function(l){a(e,l,t[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(l){Object.defineProperty(e,l,Object.getOwnPropertyDescriptor(t,l))}))}return e}function m(e,l){if(null==e)return{};var t,o,a=function(e,l){if(null==e)return{};var t,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],l.indexOf(t)>=0||(a[t]=e[t]);return a}(e,l);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],l.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=o.createContext({}),r=function(e){var l=o.useContext(i),t=l;return e&&(t="function"==typeof e?e(l):n(n({},l),e)),t},d=function(e){var l=r(e.components);return o.createElement(i.Provider,{value:l},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var l=e.children;return o.createElement(o.Fragment,{},l)}},_=o.forwardRef((function(e,l){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=r(t),_=a,b=s["".concat(i,".").concat(_)]||s[_]||k[_]||c;return t?o.createElement(b,n(n({ref:l},d),{},{components:t})):o.createElement(b,n({ref:l},d))}));function b(e,l){var t=arguments,a=l&&l.mdxType;if("string"==typeof e||a){var c=t.length,n=new Array(c);n[0]=_;var m={};for(var i in l)hasOwnProperty.call(l,i)&&(m[i]=l[i]);m.originalType=e,m[s]="string"==typeof e?e:a,n[1]=m;for(var r=2;r<c;r++)n[r]=t[r];return o.createElement.apply(null,n)}return o.createElement.apply(null,t)}_.displayName="MDXCreateElement"},37281:(e,l,t)=>{t.r(l),t.d(l,{Badge:()=>k,Bullet:()=>d,Details:()=>b,SpecifiedBy:()=>s,assets:()=>r,contentTitle:()=>m,default:()=>f,frontMatter:()=>n,metadata:()=>i,toc:()=>_});var o=t(87462),a=t(67294),c=t(3905);const n={id:"evm-block-fields-block-l1",title:"EVM_Block_Fields_Block_L1",hide_table_of_contents:!1},m=void 0,i={unversionedId:"graphql-reference/objects/evm-block-fields-block-l1",id:"graphql-reference/objects/evm-block-fields-block-l1",title:"EVM_Block_Fields_Block_L1",description:"L1 fields",source:"@site/docs/graphql-reference/objects/evm-block-fields-block-l1.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-block-fields-block-l1",permalink:"/docs/graphql-reference/objects/evm-block-fields-block-l1",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-block-fields-block-l1.mdx",tags:[],version:"current",frontMatter:{id:"evm-block-fields-block-l1",title:"EVM_Block_Fields_Block_L1",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_Block_Cube",permalink:"/docs/graphql-reference/objects/evm-block-cube"},next:{title:"EVM_Block_Fields_Block_Result",permalink:"/docs/graphql-reference/objects/evm-block-fields-block-result"}},r={},d=()=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,c.kt)(a.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),k=e=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),_=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>BaseFee</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bbasefeebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.BaseFee.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1basefeebmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.BaseFee.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1basefeebminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Coinbase</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bcoinbasebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Coinbase.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1coinbasebmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Coinbase.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1coinbasebminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Difficulty</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bdifficultybcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Difficulty.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1difficultybmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Difficulty.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1difficultybminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>GasLimit</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bgaslimitbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.GasLimit.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1gaslimitbmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.GasLimit.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1gaslimitbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>GasUsed</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bgasusedbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.GasUsed.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1gasusedbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.GasUsed.<b>if</b></code><Bullet /><code>EVM_Block_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1gasusedbifbcodeevm_block_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Hash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Hash.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1hashbmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Hash.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1hashbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Nonce</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bnoncebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Nonce.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1noncebmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Nonce.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1noncebminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Number</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bnumberbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Number.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1numberbmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Number.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1numberbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>ParentHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1bparenthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.ParentHash.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1parenthashbmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.ParentHash.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1parenthashbminimumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.<b>Time</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1btimebcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Time.<b>maximum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1timebmaximumbcodeevm_block_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_Block_Fields_Block_L1.Time.<b>minimum</b></code><Bullet /><code>EVM_Block_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_block_fields_block_l1timebminimumbcodeevm_block_comparefields-",level:5},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:l,dataClose:t,children:n,startOpen:m=!1}=e;const[i,r]=(0,a.useState)(m);return(0,c.kt)("details",(0,o.Z)({},i?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,c.kt)("summary",{onClick:e=>{e.preventDefault(),r((e=>!e))},style:{listStyle:"none"}},i?l:t),i&&n)},u={Bullet:d,SpecifiedBy:s,Badge:k,toc:_,Details:b},p="wrapper";function f(e){let{components:l,...t}=e;return(0,c.kt)(p,(0,o.Z)({},u,t,{components:l,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"L1 fields"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_Block_Fields_Block_L1 {\n  BaseFee(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  Coinbase(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  Difficulty(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  GasLimit(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  GasUsed(\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n    if: EVM_Block_Filter\n  ): String\n  Hash(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  Nonce(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  Number(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  ParentHash(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): String\n  Time(\n    if: EVM_Block_Filter\n    maximum: EVM_Block_CompareFields\n    minimum: EVM_Block_CompareFields\n  ): DateTime\n}\n")),(0,c.kt)("h3",{id:"fields"},"Fields"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bbasefeebcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"BaseFee"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"BaseFee value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1basefeebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.BaseFee.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1basefeebmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.BaseFee.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1basefeebminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.BaseFee.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bcoinbasebcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Coinbase"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Coinbase value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1coinbasebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Coinbase.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1coinbasebmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Coinbase.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1coinbasebminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Coinbase.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bdifficultybcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Difficulty"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Difficulty value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1difficultybifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Difficulty.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1difficultybmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Difficulty.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1difficultybminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Difficulty.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bgaslimitbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"GasLimit"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"GasLimit value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1gaslimitbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasLimit.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1gaslimitbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasLimit.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1gaslimitbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasLimit.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bgasusedbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"GasUsed"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"GasUsed value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1gasusedbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasUsed.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1gasusedbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasUsed.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1gasusedbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.GasUsed.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bhashbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Hash"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Hash value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1hashbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Hash.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1hashbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Hash.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1hashbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Hash.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bnoncebcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Nonce"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Nonce value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1noncebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Nonce.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1noncebmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Nonce.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1noncebminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Nonce.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bnumberbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Number"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Number value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1numberbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Number.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1numberbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Number.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1numberbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Number.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1bparenthashbcodestring-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"ParentHash"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"ParentHash value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1parenthashbifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.ParentHash.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1parenthashbmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.ParentHash.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1parenthashbminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.ParentHash.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-evm_block_fields_block_l1btimebcodedatetime-"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.",(0,c.kt)("b",null,"Time"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/date-time"},(0,c.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,c.kt)(k,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Time value"),(0,c.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_block_fields_block_l1timebifbcodeevm_block_filter-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Time.",(0,c.kt)("b",null,"if"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-block-filter"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Filter"))," ",(0,c.kt)(k,{class:"secondary",text:"input",mdxType:"Badge"})),(0,c.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1timebmaximumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Time.",(0,c.kt)("b",null,"maximum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,c.kt)("h5",{id:"code-style-fontweight-normal-evm_block_fields_block_l1timebminimumbcodeevm_block_comparefields-"},(0,c.kt)("a",{parentName:"h5",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"EVM_Block_Fields_Block_L1.Time.",(0,c.kt)("b",null,"minimum"))),(0,c.kt)(d,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-block-compare-fields"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_CompareFields"))," ",(0,c.kt)(k,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,c.kt)("h3",{id:"member-of"},"Member of"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm-block-fields-block"},(0,c.kt)("inlineCode",{parentName:"a"},"EVM_Block_Fields_Block")),"  ",(0,c.kt)(k,{class:"secondary",text:"object",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);