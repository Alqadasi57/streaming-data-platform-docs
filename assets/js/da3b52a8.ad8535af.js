"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3361],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var l=a(67294);function d(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){d(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,l,d=function(e,t){if(null==e)return{};var a,l,d={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(d[a]=e[a]);return d}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(d[a]=e[a])}return d}var m=l.createContext({}),i=function(e){var t=l.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=i(e.components);return l.createElement(m.Provider,{value:t},e.children)},s="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var a=e.components,d=e.mdxType,r=e.originalType,m=e.parentName,c=n(e,["components","mdxType","originalType","parentName"]),s=i(a),k=d,u=s["".concat(m,".").concat(k)]||s[k]||_[k]||r;return a?l.createElement(u,o(o({ref:t},c),{},{components:a})):l.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,d=t&&t.mdxType;if("string"==typeof e||d){var r=a.length,o=new Array(r);o[0]=k;var n={};for(var m in t)hasOwnProperty.call(t,m)&&(n[m]=t[m]);n.originalType=e,n[s]="string"==typeof e?e:d,o[1]=n;for(var i=2;i<r;i++)o[i]=a[i];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}k.displayName="MDXCreateElement"},52085:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>_,Bullet:()=>c,Details:()=>u,SpecifiedBy:()=>s,assets:()=>i,contentTitle:()=>n,default:()=>b,frontMatter:()=>o,metadata:()=>m,toc:()=>k});var l=a(87462),d=a(67294),r=a(3905);const o={id:"evm-dextrade-fields-block",title:"EVM_DEXTrade_Fields_Block",hide_table_of_contents:!1},n=void 0,m={unversionedId:"graphql-reference/objects/evm-dextrade-fields-block",id:"graphql-reference/objects/evm-dextrade-fields-block",title:"EVM_DEXTrade_Fields_Block",description:"Block fields",source:"@site/docs/graphql-reference/objects/evm-dextrade-fields-block.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-dextrade-fields-block",permalink:"/docs/graphql-reference/objects/evm-dextrade-fields-block",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-dextrade-fields-block.mdx",tags:[],version:"current",frontMatter:{id:"evm-dextrade-fields-block",title:"EVM_DEXTrade_Fields_Block",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_DEXTrade_Fields_Block_L1",permalink:"/docs/graphql-reference/objects/evm-dextrade-fields-block-l1"},next:{title:"EVM_DEXTrade_Fields_Call_Signature",permalink:"/docs/graphql-reference/objects/evm-dextrade-fields-call-signature"}},i={},c=()=>(0,r.kt)(d.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,r.kt)(d.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),_=e=>(0,r.kt)(d.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),k=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>BaseFee</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbbasefeebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.BaseFee.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbasefeebmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.BaseFee.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbasefeebminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Coinbase</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbcoinbasebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Coinbase.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockcoinbasebifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Coinbase.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockcoinbasebmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Date</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbdatebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Date.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockdatebmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Date.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockdatebminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Difficulty</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbdifficultybcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Difficulty.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockdifficultybmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Difficulty.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockdifficultybminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>GasLimit</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbgaslimitbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.GasLimit.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockgaslimitbmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.GasLimit.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockgaslimitbminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>GasUsed</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbgasusedbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.GasUsed.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockgasusedbmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.GasUsed.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockgasusedbminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Hash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Hash.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockhashbminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Hash.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockhashbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>L1</b></code><Bullet /><code>EVM_DEXTrade_Fields_Block_L1</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbl1bcodeevm_dextrade_fields_block_l1-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Nonce</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbnoncebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Nonce.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocknoncebmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Nonce.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocknoncebminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Number</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbnumberbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Number.<b>if</b></code><Bullet /><code>EVM_DEXTrade_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocknumberbifbcodeevm_dextrade_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Number.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocknumberbmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>ParentHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbparenthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.ParentHash.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockparenthashbmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.ParentHash.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockparenthashbminimumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.<b>Time</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blockbtimebcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Time.<b>maximum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocktimebmaximumbcodeevm_dextrade_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_DEXTrade_Fields_Block.Time.<b>minimum</b></code><Bullet /><code>EVM_DEXTrade_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_dextrade_fields_blocktimebminimumbcodeevm_dextrade_comparefields-",level:5},{value:"Member of",id:"member-of",level:3}],u=e=>{let{dataOpen:t,dataClose:a,children:o,startOpen:n=!1}=e;const[m,i]=(0,d.useState)(n);return(0,r.kt)("details",(0,l.Z)({},m?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},m?t:a),m&&o)},p={Bullet:c,SpecifiedBy:s,Badge:_,toc:k,Details:u},f="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Block fields"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_DEXTrade_Fields_Block {\n  BaseFee(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  Coinbase(\n    minimum: EVM_DEXTrade_CompareFields\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n  ): String\n  Date(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  Difficulty(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  GasLimit(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  GasUsed(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  Hash(\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n    if: EVM_DEXTrade_Filter\n  ): String\n  L1: EVM_DEXTrade_Fields_Block_L1\n  Nonce(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  Number(\n    minimum: EVM_DEXTrade_CompareFields\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n  ): String\n  ParentHash(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): String\n  Time(\n    if: EVM_DEXTrade_Filter\n    maximum: EVM_DEXTrade_CompareFields\n    minimum: EVM_DEXTrade_CompareFields\n  ): DateTime\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbbasefeebcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"BaseFee"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"BaseFee value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockbasefeebifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.BaseFee.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbasefeebmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.BaseFee.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbasefeebminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.BaseFee.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbcoinbasebcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Coinbase"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Coinbase value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockcoinbasebminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Coinbase.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockcoinbasebifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Coinbase.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockcoinbasebmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Coinbase.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbdatebcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Date"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Date value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockdatebifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Date.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockdatebmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Date.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockdatebminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Date.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbdifficultybcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Difficulty"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Difficulty value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockdifficultybifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Difficulty.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockdifficultybmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Difficulty.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockdifficultybminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Difficulty.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbgaslimitbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"GasLimit"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"GasLimit value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockgaslimitbifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasLimit.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockgaslimitbmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasLimit.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockgaslimitbminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasLimit.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbgasusedbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"GasUsed"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"GasUsed value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockgasusedbifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasUsed.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockgasusedbmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasUsed.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockgasusedbminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.GasUsed.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbhashbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Hash"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Hash value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockhashbmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Hash.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockhashbminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Hash.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockhashbifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Hash.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbl1bcodeevm_dextrade_fields_block_l1-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"L1"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-dextrade-fields-block-l1"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Fields_Block_L1"))," ",(0,r.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"L1 fields")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbnoncebcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Nonce"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Nonce value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blocknoncebifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Nonce.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocknoncebmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Nonce.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocknoncebminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Nonce.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbnumberbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Number"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Number value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blocknumberbminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Number.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocknumberbifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Number.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocknumberbmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Number.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbparenthashbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"ParentHash"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"ParentHash value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blockparenthashbifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.ParentHash.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockparenthashbmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.ParentHash.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockparenthashbminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.ParentHash.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_dextrade_fields_blockbtimebcodedatetime-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.",(0,r.kt)("b",null,"Time"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/date-time"},(0,r.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,r.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Time value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_dextrade_fields_blocktimebifbcodeevm_dextrade_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Time.",(0,r.kt)("b",null,"if"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-dextrade-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Filter"))," ",(0,r.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocktimebmaximumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Time.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_dextrade_fields_blocktimebminimumbcodeevm_dextrade_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_DEXTrade_Fields_Block.Time.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(c,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-dextrade-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_CompareFields"))," ",(0,r.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm-dextrade-cube"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_DEXTrade_Cube")),"  ",(0,r.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);