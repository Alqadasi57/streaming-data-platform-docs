"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4685],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),i=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=i(a),u=o,b=m["".concat(s,".").concat(u)]||m[u]||h[u]||r;return a?n.createElement(b,l(l({ref:t},d),{},{components:a})):n.createElement(b,l({ref:t},d))}));function b(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,l=new Array(r);l[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[m]="string"==typeof e?e:o,l[1]=c;for(var i=2;i<r;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},32114:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>h,Bullet:()=>d,Details:()=>b,SpecifiedBy:()=>m,assets:()=>i,contentTitle:()=>c,default:()=>k,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=a(87462),o=a(67294),r=a(3905);const l={id:"evm-was-on-branch-cube",title:"EVM_WasOnBranch_Cube",hide_table_of_contents:!1},c=void 0,s={unversionedId:"graphql-reference/objects/evm-was-on-branch-cube",id:"graphql-reference/objects/evm-was-on-branch-cube",title:"EVM_WasOnBranch_Cube",description:"WasOnBranch blocks in EVM Blockchain",source:"@site/docs/graphql-reference/objects/evm-was-on-branch-cube.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-was-on-branch-cube",permalink:"/docs/graphql-reference/objects/evm-was-on-branch-cube",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-was-on-branch-cube.mdx",tags:[],version:"current",frontMatter:{id:"evm-was-on-branch-cube",title:"EVM_WasOnBranch_Cube",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_Transfer_Fields_Transfer",permalink:"/docs/graphql-reference/objects/evm-transfer-fields-transfer"},next:{title:"EVM_WasOnBranch_Fields_Block_Result",permalink:"/docs/graphql-reference/objects/evm-was-on-branch-fields-block-result"}},i={},d=()=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,r.kt)(o.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),h=e=>(0,r.kt)(o.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),u=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>Block</b></code><Bullet /><code>EVM_WasOnBranch_Fields_Block</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebblockbcodeevm_wasonbranch_fields_block-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>ChainId</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebchainidbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.ChainId.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubechainidbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.ChainId.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubechainidbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>Uncle</b></code><Bullet /><code>EVM_WasOnBranch_Fields_Uncle</code> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebunclebcodeevm_wasonbranch_fields_uncle-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>average</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebaveragebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.average.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeaveragebofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.average.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeaveragebifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>contingency</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcontingencybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.contingency.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.contingency.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.contingency.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcorrelationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.correlation.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.correlation.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.correlation.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>count</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcountbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.count.<b>selectWhere</b></code><Bullet /><code>Metric_filter_String</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecountbselectwherebcodemetric_filter_string-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.count.<b>distinct</b></code><Bullet /><code>[EVM_WasOnBranch_EnumFields]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecountbdistinctbcodeevm_wasonbranch_enumfields--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>covariance</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcovariancebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.covariance.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.covariance.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.covariance.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>cramers</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcramersbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>cramers_bias_corrected</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebcramers_bias_correctedbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers_bias_corrected.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers_bias_corrected.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.cramers_bias_corrected.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>dispersion</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebdispersionbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.dispersion.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubedispersionbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.dispersion.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubedispersionbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>entropy</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebentropybcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.entropy.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeentropybofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.entropy.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeentropybifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>kurtosis</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebkurtosisbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.kurtosis.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubekurtosisbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.kurtosis.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubekurtosisbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>median</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebmedianbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.median.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubemedianbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.median.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubemedianbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>quantile</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebquantilebcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.quantile.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.quantile.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.quantile.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.quantile.<b>level</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubequantileblevelbcodefloat-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>rank_correlation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebrank_correlationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.rank_correlation.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.rank_correlation.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.rank_correlation.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>skew</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebskewbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.skew.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeskewbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.skew.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeskewbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>standard_deviation</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebstandard_deviationbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.standard_deviation.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubestandard_deviationbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.standard_deviation.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubestandard_deviationbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>sum</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebsumbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.sum.<b>of</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubesumbofbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.sum.<b>selectWhere</b></code><Bullet /><code>Metric_filter_String</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubesumbselectwherebcodemetric_filter_string-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>theils</b></code><Bullet /><code>Float</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebtheilsbcodefloat-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.theils.<b>with</b></code><Bullet /><code>EVM_WasOnBranch_NumFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbwithbcodeevm_wasonbranch_numfields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.theils.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.theils.<b>selectWhere</b></code><Bullet /><code>Metric_filter_Float</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbselectwherebcodemetric_filter_float-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.<b>uniq</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubebuniqbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.uniq.<b>of</b></code><Bullet /><code>[EVM_WasOnBranch_EnumFields]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbofbcodeevm_wasonbranch_enumfields--",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.uniq.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Cube.uniq.<b>method</b></code><Bullet /><code>OLAP_Metric_Calculation_Method_Exact</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-",level:5},{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:a,children:l,startOpen:c=!1}=e;const[s,i]=(0,o.useState)(c);return(0,r.kt)("details",(0,n.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},s?t:a),s&&l)},_={Bullet:d,SpecifiedBy:m,Badge:h,toc:u,Details:b},f="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,n.Z)({},_,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"WasOnBranch blocks in EVM Blockchain"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_WasOnBranch_Cube {\n  Block: EVM_WasOnBranch_Fields_Block\n  ChainId(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Uncle: EVM_WasOnBranch_Fields_Uncle\n  average(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  contingency(\n    selectWhere: Metric_filter_Float\n    if: EVM_WasOnBranch_Filter\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n  ): Float\n  correlation(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  count(\n    if: EVM_WasOnBranch_Filter\n    selectWhere: Metric_filter_String\n    distinct: [EVM_WasOnBranch_EnumFields]\n  ): String\n  covariance(\n    with: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n  ): Float\n  cramers(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  cramers_bias_corrected(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  dispersion(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  entropy(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  kurtosis(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  median(\n    selectWhere: Metric_filter_Float\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n  ): Float\n  quantile(\n    if: EVM_WasOnBranch_Filter\n    selectWhere: Metric_filter_Float\n    method: OLAP_Metric_Calculation_Method_Exact\n    of: EVM_WasOnBranch_NumFields\n    level: Float = 0.5\n  ): Float\n  rank_correlation(\n    if: EVM_WasOnBranch_Filter\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n    selectWhere: Metric_filter_Float\n  ): Float\n  skew(\n    of: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n    selectWhere: Metric_filter_Float\n  ): Float\n  standard_deviation(\n    selectWhere: Metric_filter_Float\n    if: EVM_WasOnBranch_Filter\n    of: EVM_WasOnBranch_NumFields\n  ): Float\n  sum(\n    if: EVM_WasOnBranch_Filter\n    of: EVM_WasOnBranch_NumFields\n    selectWhere: Metric_filter_String\n  ): String\n  theils(\n    of: EVM_WasOnBranch_NumFields\n    with: EVM_WasOnBranch_NumFields\n    if: EVM_WasOnBranch_Filter\n    selectWhere: Metric_filter_Float\n  ): Float\n  uniq(\n    selectWhere: Metric_filter_String\n    of: [EVM_WasOnBranch_EnumFields]\n    if: EVM_WasOnBranch_Filter\n    method: OLAP_Metric_Calculation_Method_Exact\n  ): String\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebblockbcodeevm_wasonbranch_fields_block-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"Block"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-was-on-branch-fields-block"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Fields_Block"))," ",(0,r.kt)(h,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Block fields")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebchainidbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"ChainId"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"ChainId value"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubechainidbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.ChainId.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubechainidbmaximumbcodeevm_wasonbranch_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.ChainId.",(0,r.kt)("b",null,"maximum"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubechainidbminimumbcodeevm_wasonbranch_comparefields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.ChainId.",(0,r.kt)("b",null,"minimum"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebunclebcodeevm_wasonbranch_fields_uncle-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"Uncle"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Fields_Uncle"))," ",(0,r.kt)(h,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Uncle fields")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebaveragebcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"average"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Average of the values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubeaveragebselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.average.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeaveragebofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.average.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Average of the values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeaveragebifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.average.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcontingencybcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"contingency"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Contingency coefficient between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.contingency.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.contingency.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.contingency.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Contingency coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecontingencybwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.contingency.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Contingency coefficient between two arguments")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcorrelationbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"correlation"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Pearson correlation coefficient between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.correlation.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.correlation.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Pearson correlation coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.correlation.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Pearson correlation coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecorrelationbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.correlation.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcountbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"count"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Count records or uniques of arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecountbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.count.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecountbselectwherebcodemetric_filter_string-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.count.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecountbdistinctbcodeevm_wasonbranch_enumfields--"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.count.",(0,r.kt)("b",null,"distinct"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-enum-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"[EVM_WasOnBranch_EnumFields]"))," ",(0,r.kt)(h,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Count distinct values of the field")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcovariancebcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"covariance"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Covariance between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.covariance.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Covariance between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.covariance.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.covariance.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecovariancebofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.covariance.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Covariance between two arguments")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcramersbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"cramers"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramersbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebcramers_bias_correctedbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"cramers_bias_corrected"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Cram\xe9r's phi coefficient with bias correction between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers_bias_corrected.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers_bias_corrected.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers_bias_corrected.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Cram\xe9r's phi coefficient with bias correction between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubecramers_bias_correctedbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.cramers_bias_corrected.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebdispersionbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"dispersion"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Dispersion for a set of values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubedispersionbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.dispersion.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubedispersionbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.dispersion.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Dispersion for a set of values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubedispersionbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.dispersion.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebentropybcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"entropy"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Entropy for a set of values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubeentropybselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.entropy.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeentropybofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.entropy.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Entropy for a set of values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeentropybifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.entropy.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebkurtosisbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"kurtosis"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Kurtosis for a set of values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubekurtosisbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.kurtosis.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubekurtosisbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.kurtosis.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Kurtosis for a set of values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubekurtosisbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.kurtosis.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebmedianbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"median"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Median for a set of values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubemedianbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.median.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubemedianbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.median.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Median for a set of values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubemedianbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.median.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebquantilebcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"quantile"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Approximate quantile of a numeric data sequence"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.quantile.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.quantile.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebmethodbcodeolap_metric_calculation_method_exact-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.quantile.",(0,r.kt)("b",null,"method"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,r.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubequantilebofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.quantile.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for quantile")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubequantileblevelbcodefloat-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.quantile.",(0,r.kt)("b",null,"level"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of ","[0.01, 0.99]",". Default value: 0.5. At level=0.5 the function calculates median.")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebrank_correlationbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"rank_correlation"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Rank correlation coefficient between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.rank_correlation.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.rank_correlation.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"First argument for Rank correlation coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.rank_correlation.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Rank correlation coefficient between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cuberank_correlationbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.rank_correlation.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebskewbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"skew"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Skew for a set of values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubeskewbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.skew.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Argument for Skew for a set of values")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeskewbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.skew.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeskewbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.skew.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebstandard_deviationbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"standard_deviation"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Standard deviation of the values"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubestandard_deviationbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.standard_deviation.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubestandard_deviationbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.standard_deviation.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubestandard_deviationbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.standard_deviation.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for Standard deviation of the values")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebsumbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"sum"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Sum values of argument"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubesumbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.sum.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubesumbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.sum.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Argument for sum")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubesumbselectwherebcodemetric_filter_string-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.sum.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebtheilsbcodefloat-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"theils"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/float"},(0,r.kt)("inlineCode",{parentName:"a"},"Float"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Theil's U uncertainty coefficient, coefficient with bias correction between two arguments"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbofbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.theils.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbwithbcodeevm_wasonbranch_numfields-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.theils.",(0,r.kt)("b",null,"with"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-num-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_NumFields"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.theils.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubetheilsbselectwherebcodemetric_filter_float-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.theils.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-float"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_Float"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_cubebuniqbcodestring-"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.",(0,r.kt)("b",null,"uniq"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(h,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Count unique records"),(0,r.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbselectwherebcodemetric_filter_string-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.uniq.",(0,r.kt)("b",null,"selectWhere"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/metric-filter-string"},(0,r.kt)("inlineCode",{parentName:"a"},"Metric_filter_String"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("p",{parentName:"blockquote"},"Defines the condition to filter the results by the value of this metric")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbofbcodeevm_wasonbranch_enumfields--"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.uniq.",(0,r.kt)("b",null,"of"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-enum-fields"},(0,r.kt)("inlineCode",{parentName:"a"},"[EVM_WasOnBranch_EnumFields]"))," ",(0,r.kt)(h,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Uniq values of the field")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbifbcodeevm_wasonbranch_filter-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.uniq.",(0,r.kt)("b",null,"if"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,r.kt)(h,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,r.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_cubeuniqbmethodbcodeolap_metric_calculation_method_exact-"},(0,r.kt)("a",{parentName:"h5",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Cube.uniq.",(0,r.kt)("b",null,"method"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/olap-metric-calculation-method-exact"},(0,r.kt)("inlineCode",{parentName:"a"},"OLAP_Metric_Calculation_Method_Exact"))," ",(0,r.kt)(h,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Method used to calculate metric values")),(0,r.kt)("h3",{id:"member-of"},"Member of"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm"},(0,r.kt)("inlineCode",{parentName:"a"},"EVM")),"  ",(0,r.kt)(h,{class:"secondary",text:"object",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);