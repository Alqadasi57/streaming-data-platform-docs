"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[127],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},57242:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={slug:"arguments-calls-events",title:"Arguments for Calls and Events refactored",authors:["astudnev"],tags:["arguments"]},s=void 0,i={permalink:"/blog/arguments-calls-events",editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/blog/2023-04-13-refactored-arguments-doc.md",source:"@site/blog/2023-04-13-refactored-arguments-doc.md",title:"Arguments for Calls and Events refactored",description:"There is the major modification in the today release of Graphql:",date:"2023-04-13T00:00:00.000Z",formattedDate:"April 13, 2023",tags:[{label:"arguments",permalink:"/blog/tags/arguments"}],readingTime:.395,hasTruncateMarker:!1,authors:[{name:"Aleksey Studnev",title:"Bitquery Technical Director",url:"https://github.com/astudnev",imageURL:"https://github.com/astudnev.png",key:"astudnev"}],frontMatter:{slug:"arguments-calls-events",title:"Arguments for Calls and Events refactored",authors:["astudnev"],tags:["arguments"]},prevItem:{title:"Added conditional select by metric",permalink:"/blog/added-conditional-metric"},nextItem:{title:"Started documenting data platform",permalink:"/blog/documentation-started"}},l={authorsImageUrls:[void 0]},c=[],u={toc:c},m="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There is the major modification in the today release of Graphql:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Arguments and return value for Calls and Events are now represented as arrays of structures. Use union to read values of arguments. Refer to ",(0,a.kt)("a",{parentName:"li",href:"/docs/evm/arguments"},"arguments")," for details on data structures."),(0,a.kt)("li",{parentName:"ol"},"Names of objects in GraphQL schema are simplified and no more contain UUID identifiers. It simplifies working with schema and allows to use fragments easier"),(0,a.kt)("li",{parentName:"ol"},"Set of bug fixed for using arrays, fragments and others")))}p.isMDXComponent=!0}}]);