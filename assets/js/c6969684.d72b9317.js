"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[86264],{3905:(e,a,n)=>{n.d(a,{Zo:()=>i,kt:()=>u});var t=n(67294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=t.createContext({}),m=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},i=function(e){var a=m(e.components);return t.createElement(s.Provider,{value:a},e.children)},d="mdxType",_={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},h=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,i=r(e,["components","mdxType","originalType","parentName"]),d=m(n),h=l,u=d["".concat(s,".").concat(h)]||d[h]||_[h]||o;return n?t.createElement(u,c(c({ref:a},i),{},{components:n})):t.createElement(u,c({ref:a},i))}));function u(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var o=n.length,c=new Array(o);c[0]=h;var r={};for(var s in a)hasOwnProperty.call(a,s)&&(r[s]=a[s]);r.originalType=e,r[d]="string"==typeof e?e:l,c[1]=r;for(var m=2;m<o;m++)c[m]=n[m];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},30185:(e,a,n)=>{n.r(a),n.d(a,{Badge:()=>_,Bullet:()=>i,Details:()=>u,SpecifiedBy:()=>d,assets:()=>m,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>h});var t=n(87462),l=n(67294),o=n(3905);const c={id:"evm-was-on-branch-fields-uncle-block",title:"EVM_WasOnBranch_Fields_Uncle_Block",hide_table_of_contents:!1},r=void 0,s={unversionedId:"graphql-reference/objects/evm-was-on-branch-fields-uncle-block",id:"graphql-reference/objects/evm-was-on-branch-fields-uncle-block",title:"EVM_WasOnBranch_Fields_Uncle_Block",description:"Block fields",source:"@site/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle-block.mdx",sourceDirName:"graphql-reference/objects",slug:"/graphql-reference/objects/evm-was-on-branch-fields-uncle-block",permalink:"/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle-block",draft:!1,editUrl:"https://github.com/bitquery/streaming-data-platform-docs/tree/main/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle-block.mdx",tags:[],version:"current",frontMatter:{id:"evm-was-on-branch-fields-uncle-block",title:"EVM_WasOnBranch_Fields_Uncle_Block",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"EVM_WasOnBranch_Fields_Block",permalink:"/docs/graphql-reference/objects/evm-was-on-branch-fields-block"},next:{title:"EVM_WasOnBranch_Fields_Uncle",permalink:"/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle"}},m={},i=()=>(0,o.kt)(l.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,o.kt)(l.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),_=e=>(0,o.kt)(l.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),h=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>BaseFee</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbbasefeebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.BaseFee.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbasefeebmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.BaseFee.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbasefeebminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Bloom</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbbloombcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Bloom.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbloombifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Bloom.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbloombmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Coinbase</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbcoinbasebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Coinbase.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockcoinbasebmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Coinbase.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockcoinbasebminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Date</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbdatebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Date.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Date.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Date.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Difficulty</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbdifficultybcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Difficulty.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdifficultybminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Difficulty.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdifficultybifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Extra</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbextrabcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Extra.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockextrabmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Extra.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockextrabminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>GasLimit</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbgaslimitbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.GasLimit.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgaslimitbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.GasLimit.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgaslimitbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>GasUsed</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbgasusedbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.GasUsed.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgasusedbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.GasUsed.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgasusedbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Hash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Hash.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockhashbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Hash.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockhashbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>MixDigest</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbmixdigestbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.MixDigest.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockmixdigestbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.MixDigest.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockmixdigestbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Nonce</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbnoncebcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Nonce.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknoncebmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Nonce.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknoncebminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Number</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbnumberbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Number.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknumberbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Number.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknumberbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>ParentHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbparenthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.ParentHash.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockparenthashbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.ParentHash.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockparenthashbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>ReceiptHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbreceipthashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.ReceiptHash.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockreceipthashbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.ReceiptHash.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockreceipthashbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Root</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbrootbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Root.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockrootbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Root.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockrootbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>Time</b></code><Bullet /><code>DateTime</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbtimebcodedatetime-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Time.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Time.<b>interval</b></code><Bullet /><code>OLAP_DateTimeInterval</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebintervalbcodeolap_datetimeinterval-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.Time.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>TxHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbtxhashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.TxHash.<b>minimum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktxhashbminimumbcodeevm_wasonbranch_comparefields-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.TxHash.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktxhashbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.<b>UncleHash</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbunclehashbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.UncleHash.<b>if</b></code><Bullet /><code>EVM_WasOnBranch_Filter</code> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockunclehashbifbcodeevm_wasonbranch_filter-",level:5},{value:'<code style={{ fontWeight: \'normal\' }}>EVM_WasOnBranch_Fields_Uncle_Block.UncleHash.<b>maximum</b></code><Bullet /><code>EVM_WasOnBranch_CompareFields</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockunclehashbmaximumbcodeevm_wasonbranch_comparefields-",level:5},{value:"Member of",id:"member-of",level:3}],u=e=>{let{dataOpen:a,dataClose:n,children:c,startOpen:r=!1}=e;const[s,m]=(0,l.useState)(r);return(0,o.kt)("details",(0,t.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,o.kt)("summary",{onClick:e=>{e.preventDefault(),m((e=>!e))},style:{listStyle:"none"}},s?a:n),s&&c)},k={Bullet:i,SpecifiedBy:d,Badge:_,toc:h,Details:u},b="wrapper";function p(e){let{components:a,...n}=e;return(0,o.kt)(b,(0,t.Z)({},k,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Block fields"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type EVM_WasOnBranch_Fields_Uncle_Block {\n  BaseFee(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Bloom(\n    minimum: EVM_WasOnBranch_CompareFields\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n  ): String\n  Coinbase(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Date(\n    interval: OLAP_DateInterval\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Difficulty(\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n    if: EVM_WasOnBranch_Filter\n  ): String\n  Extra(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  GasLimit(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  GasUsed(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Hash(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  MixDigest(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Nonce(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Number(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  ParentHash(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  ReceiptHash(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Root(\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n  ): String\n  Time(\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n    interval: OLAP_DateTimeInterval\n    if: EVM_WasOnBranch_Filter\n  ): DateTime\n  TxHash(\n    maximum: EVM_WasOnBranch_CompareFields\n    minimum: EVM_WasOnBranch_CompareFields\n    if: EVM_WasOnBranch_Filter\n  ): String\n  UncleHash(\n    minimum: EVM_WasOnBranch_CompareFields\n    if: EVM_WasOnBranch_Filter\n    maximum: EVM_WasOnBranch_CompareFields\n  ): String\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbbasefeebcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"BaseFee"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"BaseFee value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbasefeebifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.BaseFee.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbasefeebmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.BaseFee.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbasefeebminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.BaseFee.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbbloombcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Bloom"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Bloom value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbloombminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Bloom.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbloombifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Bloom.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbloombmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Bloom.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbcoinbasebcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Coinbase"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Coinbase value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockcoinbasebifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Coinbase.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockcoinbasebmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Coinbase.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockcoinbasebminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Coinbase.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbdatebcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Date"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Date value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebintervalbcodeolap_dateinterval-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Date.",(0,o.kt)("b",null,"interval"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/olap-date-interval"},(0,o.kt)("inlineCode",{parentName:"a"},"OLAP_DateInterval"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Date interval in specified units")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Date.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Date.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdatebminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Date.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbdifficultybcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Difficulty"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Difficulty value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdifficultybmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Difficulty.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdifficultybminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Difficulty.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockdifficultybifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Difficulty.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbextrabcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Extra"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Extra value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockextrabifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Extra.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockextrabmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Extra.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockextrabminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Extra.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbgaslimitbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"GasLimit"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"GasLimit value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgaslimitbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasLimit.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgaslimitbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasLimit.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgaslimitbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasLimit.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbgasusedbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"GasUsed"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"GasUsed value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgasusedbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasUsed.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgasusedbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasUsed.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockgasusedbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.GasUsed.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbhashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Hash"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Hash value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockhashbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Hash.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockhashbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Hash.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockhashbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Hash.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbmixdigestbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"MixDigest"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"MixDigest value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockmixdigestbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.MixDigest.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockmixdigestbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.MixDigest.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockmixdigestbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.MixDigest.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbnoncebcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Nonce"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Nonce value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknoncebifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Nonce.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknoncebmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Nonce.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknoncebminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Nonce.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbnumberbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Number"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Number value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknumberbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Number.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknumberbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Number.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocknumberbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Number.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbparenthashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"ParentHash"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"ParentHash value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockparenthashbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ParentHash.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockparenthashbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ParentHash.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockparenthashbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ParentHash.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbreceipthashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"ReceiptHash"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"ReceiptHash value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockreceipthashbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ReceiptHash.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockreceipthashbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ReceiptHash.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockreceipthashbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.ReceiptHash.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbrootbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Root"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Root value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockrootbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Root.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockrootbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Root.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockrootbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Root.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbtimebcodedatetime-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"Time"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/date-time"},(0,o.kt)("inlineCode",{parentName:"a"},"DateTime"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Time value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Time.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Time.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebintervalbcodeolap_datetimeinterval-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Time.",(0,o.kt)("b",null,"interval"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/olap-date-time-interval"},(0,o.kt)("inlineCode",{parentName:"a"},"OLAP_DateTimeInterval"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Time interval in specified units")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktimebifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.Time.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbtxhashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"TxHash"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"TxHash value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktxhashbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.TxHash.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktxhashbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.TxHash.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blocktxhashbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.TxHash.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockbunclehashbcodestring-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.",(0,o.kt)("b",null,"UncleHash"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/docs/graphql-reference/scalars/string"},(0,o.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,o.kt)(_,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"UncleHash value"),(0,o.kt)("h5",{parentName:"blockquote",id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockunclehashbminimumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.UncleHash.",(0,o.kt)("b",null,"minimum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is minimum")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockunclehashbifbcodeevm_wasonbranch_filter-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.UncleHash.",(0,o.kt)("b",null,"if"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/inputs/evm-was-on-branch-filter"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Filter"))," ",(0,o.kt)(_,{class:"secondary",text:"input",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Apply a condition to a metric calculation")),(0,o.kt)("h5",{id:"code-style-fontweight-normal-evm_wasonbranch_fields_uncle_blockunclehashbmaximumbcodeevm_wasonbranch_comparefields-"},(0,o.kt)("a",{parentName:"h5",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"EVM_WasOnBranch_Fields_Uncle_Block.UncleHash.",(0,o.kt)("b",null,"maximum"))),(0,o.kt)(i,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h5",href:"/docs/graphql-reference/enums/evm-was-on-branch-compare-fields"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_CompareFields"))," ",(0,o.kt)(_,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Return value when the argument is maximum")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/graphql-reference/objects/evm-was-on-branch-fields-uncle"},(0,o.kt)("inlineCode",{parentName:"a"},"EVM_WasOnBranch_Fields_Uncle")),"  ",(0,o.kt)(_,{class:"secondary",text:"object",mdxType:"Badge"})))}p.isMDXComponent=!0}}]);